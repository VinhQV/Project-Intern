
UART_Link_STM32_ESP32.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000e68  08000194  08000194  00001194  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000ffc  08000ffc  00003028  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000ffc  08000ffc  00003028  2**0
                  CONTENTS
  4 .ARM          00000000  08000ffc  08000ffc  00003028  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000ffc  08000ffc  00003028  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000ffc  08000ffc  00001ffc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08001000  08001000  00002000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000028  20000000  08001004  00003000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          00000020  20000028  0800102c  00003028  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  20000048  0800102c  00003048  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00003028  2**0
                  CONTENTS, READONLY
 12 .debug_info   00003206  00000000  00000000  00003058  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 13 .debug_abbrev 00000a6f  00000000  00000000  0000625e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_aranges 00000420  00000000  00000000  00006cd0  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_rnglists 00000064  00000000  00000000  000070f0  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_macro  0000d0ea  00000000  00000000  00007154  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_line   00002ab6  00000000  00000000  0001423e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_str    0004198d  00000000  00000000  00016cf4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .comment      000000be  00000000  00000000  00058681  2**0
                  CONTENTS, READONLY
 20 .debug_frame  0000111c  00000000  00000000  00058740  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 21 .debug_line_str 00000063  00000000  00000000  0005985c  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_ranges 00000340  00000000  00000000  000598bf  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000194 <__do_global_dtors_aux>:
 8000194:	b510      	push	{r4, lr}
 8000196:	4c05      	ldr	r4, [pc, #20]	@ (80001ac <__do_global_dtors_aux+0x18>)
 8000198:	7823      	ldrb	r3, [r4, #0]
 800019a:	b933      	cbnz	r3, 80001aa <__do_global_dtors_aux+0x16>
 800019c:	4b04      	ldr	r3, [pc, #16]	@ (80001b0 <__do_global_dtors_aux+0x1c>)
 800019e:	b113      	cbz	r3, 80001a6 <__do_global_dtors_aux+0x12>
 80001a0:	4804      	ldr	r0, [pc, #16]	@ (80001b4 <__do_global_dtors_aux+0x20>)
 80001a2:	f3af 8000 	nop.w
 80001a6:	2301      	movs	r3, #1
 80001a8:	7023      	strb	r3, [r4, #0]
 80001aa:	bd10      	pop	{r4, pc}
 80001ac:	20000028 	.word	0x20000028
 80001b0:	00000000 	.word	0x00000000
 80001b4:	08000fe4 	.word	0x08000fe4

080001b8 <frame_dummy>:
 80001b8:	b508      	push	{r3, lr}
 80001ba:	4b03      	ldr	r3, [pc, #12]	@ (80001c8 <frame_dummy+0x10>)
 80001bc:	b11b      	cbz	r3, 80001c6 <frame_dummy+0xe>
 80001be:	4903      	ldr	r1, [pc, #12]	@ (80001cc <frame_dummy+0x14>)
 80001c0:	4803      	ldr	r0, [pc, #12]	@ (80001d0 <frame_dummy+0x18>)
 80001c2:	f3af 8000 	nop.w
 80001c6:	bd08      	pop	{r3, pc}
 80001c8:	00000000 	.word	0x00000000
 80001cc:	2000002c 	.word	0x2000002c
 80001d0:	08000fe4 	.word	0x08000fe4

080001d4 <Led_Init>:
uint8_t currentButtonState;
volatile uint8_t data_receive;
bool ledState = GPIO_PIN_RESET;
//LED
static void Led_Init(void)
{
 80001d4:	b580      	push	{r7, lr}
 80001d6:	b082      	sub	sp, #8
 80001d8:	af00      	add	r7, sp, #0
	GPIO_InitTypeDef GPIO_InitStructure;
	RCC_AHB1PeriphClockCmd(LED_GPIO_RCC, ENABLE);
 80001da:	2101      	movs	r1, #1
 80001dc:	2001      	movs	r0, #1
 80001de:	f000 fce1 	bl	8000ba4 <RCC_AHB1PeriphClockCmd>
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_OUT;
 80001e2:	2301      	movs	r3, #1
 80001e4:	713b      	strb	r3, [r7, #4]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80001e6:	2302      	movs	r3, #2
 80001e8:	717b      	strb	r3, [r7, #5]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80001ea:	2301      	movs	r3, #1
 80001ec:	71fb      	strb	r3, [r7, #7]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80001ee:	2300      	movs	r3, #0
 80001f0:	71bb      	strb	r3, [r7, #6]
	GPIO_InitStructure.GPIO_Pin = LED_GPIO_PIN;
 80001f2:	2302      	movs	r3, #2
 80001f4:	603b      	str	r3, [r7, #0]
	GPIO_Init(LED_GPIO_PORT, &GPIO_InitStructure);
 80001f6:	463b      	mov	r3, r7
 80001f8:	4619      	mov	r1, r3
 80001fa:	4803      	ldr	r0, [pc, #12]	@ (8000208 <Led_Init+0x34>)
 80001fc:	f000 fb1a 	bl	8000834 <GPIO_Init>

}
 8000200:	bf00      	nop
 8000202:	3708      	adds	r7, #8
 8000204:	46bd      	mov	sp, r7
 8000206:	bd80      	pop	{r7, pc}
 8000208:	40020000 	.word	0x40020000

0800020c <Led_Control>:

static void Led_Control(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, uint8_t status)
{
 800020c:	b580      	push	{r7, lr}
 800020e:	b082      	sub	sp, #8
 8000210:	af00      	add	r7, sp, #0
 8000212:	6078      	str	r0, [r7, #4]
 8000214:	460b      	mov	r3, r1
 8000216:	807b      	strh	r3, [r7, #2]
 8000218:	4613      	mov	r3, r2
 800021a:	707b      	strb	r3, [r7, #1]
	if( status == GPIO_PIN_SET)
 800021c:	787b      	ldrb	r3, [r7, #1]
 800021e:	2b01      	cmp	r3, #1
 8000220:	d105      	bne.n	800022e <Led_Control+0x22>
	{
		GPIO_SetBits(GPIOx, GPIO_Pin);
 8000222:	887b      	ldrh	r3, [r7, #2]
 8000224:	4619      	mov	r1, r3
 8000226:	6878      	ldr	r0, [r7, #4]
 8000228:	f000 fbac 	bl	8000984 <GPIO_SetBits>
	}
	else if( status == GPIO_PIN_RESET)
	{
		GPIO_ResetBits(GPIOx, GPIO_Pin);
	}
}
 800022c:	e007      	b.n	800023e <Led_Control+0x32>
	else if( status == GPIO_PIN_RESET)
 800022e:	787b      	ldrb	r3, [r7, #1]
 8000230:	2b00      	cmp	r3, #0
 8000232:	d104      	bne.n	800023e <Led_Control+0x32>
		GPIO_ResetBits(GPIOx, GPIO_Pin);
 8000234:	887b      	ldrh	r3, [r7, #2]
 8000236:	4619      	mov	r1, r3
 8000238:	6878      	ldr	r0, [r7, #4]
 800023a:	f000 fbb2 	bl	80009a2 <GPIO_ResetBits>
}
 800023e:	bf00      	nop
 8000240:	3708      	adds	r7, #8
 8000242:	46bd      	mov	sp, r7
 8000244:	bd80      	pop	{r7, pc}
	...

08000248 <Button_Init>:
// BUTTON
static void Button_Init(void)
{
 8000248:	b580      	push	{r7, lr}
 800024a:	b082      	sub	sp, #8
 800024c:	af00      	add	r7, sp, #0
    GPIO_InitTypeDef GPIO_InitStructure;

    RCC_AHB1PeriphClockCmd(BUTTON_GPIO_RCC, ENABLE);
 800024e:	2101      	movs	r1, #1
 8000250:	2004      	movs	r0, #4
 8000252:	f000 fca7 	bl	8000ba4 <RCC_AHB1PeriphClockCmd>

    GPIO_InitStructure.GPIO_Mode = GPIO_Mode_IN;
 8000256:	2300      	movs	r3, #0
 8000258:	713b      	strb	r3, [r7, #4]
    GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800025a:	2302      	movs	r3, #2
 800025c:	717b      	strb	r3, [r7, #5]
    GPIO_InitStructure.GPIO_PuPd  = GPIO_PuPd_UP;
 800025e:	2301      	movs	r3, #1
 8000260:	71fb      	strb	r3, [r7, #7]
    GPIO_InitStructure.GPIO_Pin = BUTTON_GPIO_PIN;
 8000262:	f44f 5300 	mov.w	r3, #8192	@ 0x2000
 8000266:	603b      	str	r3, [r7, #0]
    GPIO_Init(BUTTON_GPIO_PORT, &GPIO_InitStructure);
 8000268:	463b      	mov	r3, r7
 800026a:	4619      	mov	r1, r3
 800026c:	4803      	ldr	r0, [pc, #12]	@ (800027c <Button_Init+0x34>)
 800026e:	f000 fae1 	bl	8000834 <GPIO_Init>
}
 8000272:	bf00      	nop
 8000274:	3708      	adds	r7, #8
 8000276:	46bd      	mov	sp, r7
 8000278:	bd80      	pop	{r7, pc}
 800027a:	bf00      	nop
 800027c:	40020800 	.word	0x40020800

08000280 <Button_GetLogic>:


static uint8_t Button_GetLogic(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 8000280:	b580      	push	{r7, lr}
 8000282:	b082      	sub	sp, #8
 8000284:	af00      	add	r7, sp, #0
 8000286:	6078      	str	r0, [r7, #4]
 8000288:	460b      	mov	r3, r1
 800028a:	807b      	strh	r3, [r7, #2]
	return GPIO_ReadInputDataBit(GPIOx, GPIO_Pin);
 800028c:	887b      	ldrh	r3, [r7, #2]
 800028e:	4619      	mov	r1, r3
 8000290:	6878      	ldr	r0, [r7, #4]
 8000292:	f000 fb5d 	bl	8000950 <GPIO_ReadInputDataBit>
 8000296:	4603      	mov	r3, r0
}
 8000298:	4618      	mov	r0, r3
 800029a:	3708      	adds	r7, #8
 800029c:	46bd      	mov	sp, r7
 800029e:	bd80      	pop	{r7, pc}

080002a0 <USART6_Init>:

//MASTER
static void USART6_Init(void)
{
 80002a0:	b580      	push	{r7, lr}
 80002a2:	b086      	sub	sp, #24
 80002a4:	af00      	add	r7, sp, #0

	GPIO_InitTypeDef		GPIO_InitStructure;
	USART_InitTypeDef		USART_InitStructure;
	//Enable Clock USART1 And GPIOC----------------------------------
	RCC_AHB1PeriphClockCmd(USART6_GPIO_CLOCK, ENABLE);
 80002a6:	2101      	movs	r1, #1
 80002a8:	2004      	movs	r0, #4
 80002aa:	f000 fc7b 	bl	8000ba4 <RCC_AHB1PeriphClockCmd>

	//Initializes GPIO Use USART6 Peripheral---------------------
	GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 80002ae:	2302      	movs	r3, #2
 80002b0:	753b      	strb	r3, [r7, #20]
	GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 80002b2:	2302      	movs	r3, #2
 80002b4:	757b      	strb	r3, [r7, #21]
	GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 80002b6:	2300      	movs	r3, #0
 80002b8:	75bb      	strb	r3, [r7, #22]
	GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 80002ba:	2301      	movs	r3, #1
 80002bc:	75fb      	strb	r3, [r7, #23]
	GPIO_InitStructure.GPIO_Pin = USART6_TX_GPIO_PIN;
 80002be:	2340      	movs	r3, #64	@ 0x40
 80002c0:	613b      	str	r3, [r7, #16]
	GPIO_Init(USART6_GPIO_PORT, &GPIO_InitStructure);
 80002c2:	f107 0310 	add.w	r3, r7, #16
 80002c6:	4619      	mov	r1, r3
 80002c8:	4812      	ldr	r0, [pc, #72]	@ (8000314 <USART6_Init+0x74>)
 80002ca:	f000 fab3 	bl	8000834 <GPIO_Init>

	//Initializes GPIO As Alternate function mode-----------------
	GPIO_PinAFConfig(USART6_GPIO_PORT, GPIO_PinSource6, GPIO_AF_USART6);
 80002ce:	2208      	movs	r2, #8
 80002d0:	2106      	movs	r1, #6
 80002d2:	4810      	ldr	r0, [pc, #64]	@ (8000314 <USART6_Init+0x74>)
 80002d4:	f000 fb74 	bl	80009c0 <GPIO_PinAFConfig>

	//Initializes USART6 Peripheral--------------------------
	RCC_APB2PeriphClockCmd(USART6_CLOCK, ENABLE);
 80002d8:	2101      	movs	r1, #1
 80002da:	2020      	movs	r0, #32
 80002dc:	f000 fc82 	bl	8000be4 <RCC_APB2PeriphClockCmd>

	USART_InitStructure.USART_BaudRate = 9600;
 80002e0:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 80002e4:	603b      	str	r3, [r7, #0]
	USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 80002e6:	2300      	movs	r3, #0
 80002e8:	80bb      	strh	r3, [r7, #4]
	USART_InitStructure.USART_StopBits = USART_StopBits_1;
 80002ea:	2300      	movs	r3, #0
 80002ec:	80fb      	strh	r3, [r7, #6]
	USART_InitStructure.USART_Parity = USART_Parity_No;
 80002ee:	2300      	movs	r3, #0
 80002f0:	813b      	strh	r3, [r7, #8]
	USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 80002f2:	2300      	movs	r3, #0
 80002f4:	81bb      	strh	r3, [r7, #12]
	USART_InitStructure.USART_Mode = USART_Mode_Tx;
 80002f6:	2308      	movs	r3, #8
 80002f8:	817b      	strh	r3, [r7, #10]

	USART_Init(USART6, &USART_InitStructure);
 80002fa:	463b      	mov	r3, r7
 80002fc:	4619      	mov	r1, r3
 80002fe:	4806      	ldr	r0, [pc, #24]	@ (8000318 <USART6_Init+0x78>)
 8000300:	f000 fc90 	bl	8000c24 <USART_Init>

	USART_Cmd(USART6, ENABLE);
 8000304:	2101      	movs	r1, #1
 8000306:	4804      	ldr	r0, [pc, #16]	@ (8000318 <USART6_Init+0x78>)
 8000308:	f000 fd46 	bl	8000d98 <USART_Cmd>
}
 800030c:	bf00      	nop
 800030e:	3718      	adds	r7, #24
 8000310:	46bd      	mov	sp, r7
 8000312:	bd80      	pop	{r7, pc}
 8000314:	40020800 	.word	0x40020800
 8000318:	40011400 	.word	0x40011400

0800031c <USART1_Init>:
//SLAVE
 static void USART1_Init(void)
 {
 800031c:	b580      	push	{r7, lr}
 800031e:	b088      	sub	sp, #32
 8000320:	af00      	add	r7, sp, #0
	 GPIO_InitTypeDef			GPIO_InitStructure;
	 USART_InitTypeDef			USART_InitStructure;
	 NVIC_InitTypeDef			NVIC_InitStructure;

	 //Cho phep dong ho tren chan PA10 chay
	 RCC_AHB1PeriphClockCmd(USART1_GPIO_CLOCK, ENABLE);
 8000322:	2101      	movs	r1, #1
 8000324:	2001      	movs	r0, #1
 8000326:	f000 fc3d 	bl	8000ba4 <RCC_AHB1PeriphClockCmd>
	 GPIO_InitStructure.GPIO_Mode = GPIO_Mode_AF;
 800032a:	2302      	movs	r3, #2
 800032c:	773b      	strb	r3, [r7, #28]
	 GPIO_InitStructure.GPIO_Speed = GPIO_Speed_50MHz;
 800032e:	2302      	movs	r3, #2
 8000330:	777b      	strb	r3, [r7, #29]
	 GPIO_InitStructure.GPIO_PuPd = GPIO_PuPd_UP;
 8000332:	2301      	movs	r3, #1
 8000334:	77fb      	strb	r3, [r7, #31]
	 GPIO_InitStructure.GPIO_OType = GPIO_OType_PP;
 8000336:	2300      	movs	r3, #0
 8000338:	77bb      	strb	r3, [r7, #30]
	 GPIO_InitStructure.GPIO_Pin = USART1_RX_GPIO_PIN;
 800033a:	f44f 6380 	mov.w	r3, #1024	@ 0x400
 800033e:	61bb      	str	r3, [r7, #24]
	 GPIO_Init(USART1_GPIO_PORT, &GPIO_InitStructure);
 8000340:	f107 0318 	add.w	r3, r7, #24
 8000344:	4619      	mov	r1, r3
 8000346:	481e      	ldr	r0, [pc, #120]	@ (80003c0 <USART1_Init+0xa4>)
 8000348:	f000 fa74 	bl	8000834 <GPIO_Init>

	 //Chan thay the chan PA10 thanh che do UART
	 GPIO_PinAFConfig(USART1_GPIO_PORT, GPIO_PinSource10, GPIO_AF_USART1);
 800034c:	2207      	movs	r2, #7
 800034e:	210a      	movs	r1, #10
 8000350:	481b      	ldr	r0, [pc, #108]	@ (80003c0 <USART1_Init+0xa4>)
 8000352:	f000 fb35 	bl	80009c0 <GPIO_PinAFConfig>
	 //Cap clock cho UART PA10
	 RCC_APB2PeriphClockCmd(USART1_CLOCK, ENABLE);
 8000356:	2101      	movs	r1, #1
 8000358:	2010      	movs	r0, #16
 800035a:	f000 fc43 	bl	8000be4 <RCC_APB2PeriphClockCmd>
	 //Cau hinh chan PA10 o che do UART
	 USART_InitStructure.USART_BaudRate = 9600;
 800035e:	f44f 5316 	mov.w	r3, #9600	@ 0x2580
 8000362:	60bb      	str	r3, [r7, #8]
	 USART_InitStructure.USART_WordLength = USART_WordLength_8b;
 8000364:	2300      	movs	r3, #0
 8000366:	81bb      	strh	r3, [r7, #12]
	 USART_InitStructure.USART_StopBits = USART_StopBits_1;
 8000368:	2300      	movs	r3, #0
 800036a:	81fb      	strh	r3, [r7, #14]
	 USART_InitStructure.USART_Parity = USART_Parity_No;
 800036c:	2300      	movs	r3, #0
 800036e:	823b      	strh	r3, [r7, #16]
	 USART_InitStructure.USART_HardwareFlowControl = USART_HardwareFlowControl_None;
 8000370:	2300      	movs	r3, #0
 8000372:	82bb      	strh	r3, [r7, #20]
	 USART_InitStructure.USART_Mode = USART_Mode_Rx;
 8000374:	2304      	movs	r3, #4
 8000376:	827b      	strh	r3, [r7, #18]
	 USART_Init(USART1, &USART_InitStructure);
 8000378:	f107 0308 	add.w	r3, r7, #8
 800037c:	4619      	mov	r1, r3
 800037e:	4811      	ldr	r0, [pc, #68]	@ (80003c4 <USART1_Init+0xa8>)
 8000380:	f000 fc50 	bl	8000c24 <USART_Init>
	 USART_Cmd(USART1, ENABLE);
 8000384:	2101      	movs	r1, #1
 8000386:	480f      	ldr	r0, [pc, #60]	@ (80003c4 <USART1_Init+0xa8>)
 8000388:	f000 fd06 	bl	8000d98 <USART_Cmd>

	 //Cau hinh ngat tren chan PA10 UART
	 USART_ITConfig(USART1, USART_IT_RXNE, ENABLE );
 800038c:	2201      	movs	r2, #1
 800038e:	f240 5125 	movw	r1, #1317	@ 0x525
 8000392:	480c      	ldr	r0, [pc, #48]	@ (80003c4 <USART1_Init+0xa8>)
 8000394:	f000 fd42 	bl	8000e1c <USART_ITConfig>
	 NVIC_PriorityGroupConfig( NVIC_PriorityGroup_2);
 8000398:	f44f 60a0 	mov.w	r0, #1280	@ 0x500
 800039c:	f000 f9d4 	bl	8000748 <NVIC_PriorityGroupConfig>
	 //Cau hinh ngat
	 NVIC_InitStructure.NVIC_IRQChannel = USART1_IRQn;
 80003a0:	2325      	movs	r3, #37	@ 0x25
 80003a2:	713b      	strb	r3, [r7, #4]
	 NVIC_InitStructure.NVIC_IRQChannelCmd = ENABLE;
 80003a4:	2301      	movs	r3, #1
 80003a6:	71fb      	strb	r3, [r7, #7]
	 NVIC_InitStructure.NVIC_IRQChannelPreemptionPriority = 0;
 80003a8:	2300      	movs	r3, #0
 80003aa:	717b      	strb	r3, [r7, #5]
	 NVIC_InitStructure.NVIC_IRQChannelSubPriority = 0;
 80003ac:	2300      	movs	r3, #0
 80003ae:	71bb      	strb	r3, [r7, #6]
	 NVIC_Init( &NVIC_InitStructure);
 80003b0:	1d3b      	adds	r3, r7, #4
 80003b2:	4618      	mov	r0, r3
 80003b4:	f000 f9dc 	bl	8000770 <NVIC_Init>
 }
 80003b8:	bf00      	nop
 80003ba:	3720      	adds	r7, #32
 80003bc:	46bd      	mov	sp, r7
 80003be:	bd80      	pop	{r7, pc}
 80003c0:	40020000 	.word	0x40020000
 80003c4:	40011000 	.word	0x40011000

080003c8 <USART1_IRQHandler>:

void USART1_IRQHandler(void)
{
 80003c8:	b580      	push	{r7, lr}
 80003ca:	af00      	add	r7, sp, #0
	if(USART_GetITStatus(USART1, USART_IT_RXNE) == SET)
 80003cc:	f240 5125 	movw	r1, #1317	@ 0x525
 80003d0:	4809      	ldr	r0, [pc, #36]	@ (80003f8 <USART1_IRQHandler+0x30>)
 80003d2:	f000 fd6b 	bl	8000eac <USART_GetITStatus>
 80003d6:	4603      	mov	r3, r0
 80003d8:	2b01      	cmp	r3, #1
 80003da:	d106      	bne.n	80003ea <USART1_IRQHandler+0x22>
	{
		data_receive = USART_ReceiveData(USART1);
 80003dc:	4806      	ldr	r0, [pc, #24]	@ (80003f8 <USART1_IRQHandler+0x30>)
 80003de:	f000 fd0d 	bl	8000dfc <USART_ReceiveData>
 80003e2:	4603      	mov	r3, r0
 80003e4:	b2da      	uxtb	r2, r3
 80003e6:	4b05      	ldr	r3, [pc, #20]	@ (80003fc <USART1_IRQHandler+0x34>)
 80003e8:	701a      	strb	r2, [r3, #0]
	}
	USART_ClearITPendingBit(USART1, USART_IT_RXNE);
 80003ea:	f240 5125 	movw	r1, #1317	@ 0x525
 80003ee:	4802      	ldr	r0, [pc, #8]	@ (80003f8 <USART1_IRQHandler+0x30>)
 80003f0:	f000 fdb7 	bl	8000f62 <USART_ClearITPendingBit>
}
 80003f4:	bf00      	nop
 80003f6:	bd80      	pop	{r7, pc}
 80003f8:	40011000 	.word	0x40011000
 80003fc:	20000045 	.word	0x20000045

08000400 <AppInitCommon>:
void AppInitCommon(void)
{
 8000400:	b580      	push	{r7, lr}
 8000402:	af00      	add	r7, sp, #0
	SystemCoreClockUpdate();
 8000404:	f000 f8d4 	bl	80005b0 <SystemCoreClockUpdate>
	Led_Init();
 8000408:	f7ff fee4 	bl	80001d4 <Led_Init>
	Button_Init();
 800040c:	f7ff ff1c 	bl	8000248 <Button_Init>
	USART1_Init();
 8000410:	f7ff ff84 	bl	800031c <USART1_Init>
//	USART1_IRQHandler();
	USART6_Init();
 8000414:	f7ff ff44 	bl	80002a0 <USART6_Init>
}
 8000418:	bf00      	nop
 800041a:	bd80      	pop	{r7, pc}

0800041c <DelayMs>:

void DelayMs(uint32_t ms)
{
 800041c:	b480      	push	{r7}
 800041e:	b085      	sub	sp, #20
 8000420:	af00      	add	r7, sp, #0
 8000422:	6078      	str	r0, [r7, #4]
	//loop forever
	for(uint32_t i = 0;i < ms ; i++)
 8000424:	2300      	movs	r3, #0
 8000426:	60fb      	str	r3, [r7, #12]
 8000428:	e00d      	b.n	8000446 <DelayMs+0x2a>
	{
		for(uint32_t j = 0;j < 5000; j++);
 800042a:	2300      	movs	r3, #0
 800042c:	60bb      	str	r3, [r7, #8]
 800042e:	e002      	b.n	8000436 <DelayMs+0x1a>
 8000430:	68bb      	ldr	r3, [r7, #8]
 8000432:	3301      	adds	r3, #1
 8000434:	60bb      	str	r3, [r7, #8]
 8000436:	68bb      	ldr	r3, [r7, #8]
 8000438:	f241 3287 	movw	r2, #4999	@ 0x1387
 800043c:	4293      	cmp	r3, r2
 800043e:	d9f7      	bls.n	8000430 <DelayMs+0x14>
	for(uint32_t i = 0;i < ms ; i++)
 8000440:	68fb      	ldr	r3, [r7, #12]
 8000442:	3301      	adds	r3, #1
 8000444:	60fb      	str	r3, [r7, #12]
 8000446:	68fa      	ldr	r2, [r7, #12]
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	429a      	cmp	r2, r3
 800044c:	d3ed      	bcc.n	800042a <DelayMs+0xe>
	}
}
 800044e:	bf00      	nop
 8000450:	bf00      	nop
 8000452:	3714      	adds	r7, #20
 8000454:	46bd      	mov	sp, r7
 8000456:	f85d 7b04 	ldr.w	r7, [sp], #4
 800045a:	4770      	bx	lr

0800045c <main>:

int main(void)
{
 800045c:	b580      	push	{r7, lr}
 800045e:	af00      	add	r7, sp, #0
    AppInitCommon();
 8000460:	f7ff ffce 	bl	8000400 <AppInitCommon>

    while(1)
    {
    	//Transmit
        currentButtonState = Button_GetLogic(BUTTON_GPIO_PORT, BUTTON_GPIO_PIN);
 8000464:	f44f 5100 	mov.w	r1, #8192	@ 0x2000
 8000468:	481a      	ldr	r0, [pc, #104]	@ (80004d4 <main+0x78>)
 800046a:	f7ff ff09 	bl	8000280 <Button_GetLogic>
 800046e:	4603      	mov	r3, r0
 8000470:	461a      	mov	r2, r3
 8000472:	4b19      	ldr	r3, [pc, #100]	@ (80004d8 <main+0x7c>)
 8000474:	701a      	strb	r2, [r3, #0]
        if ((currentButtonState == Bit_RESET) && (lastButtonState == Bit_SET))
 8000476:	4b18      	ldr	r3, [pc, #96]	@ (80004d8 <main+0x7c>)
 8000478:	781b      	ldrb	r3, [r3, #0]
 800047a:	2b00      	cmp	r3, #0
 800047c:	d10b      	bne.n	8000496 <main+0x3a>
 800047e:	4b17      	ldr	r3, [pc, #92]	@ (80004dc <main+0x80>)
 8000480:	781b      	ldrb	r3, [r3, #0]
 8000482:	2b01      	cmp	r3, #1
 8000484:	d107      	bne.n	8000496 <main+0x3a>
        {
            // Gửi dữ liệu 0x10 qua USART6
            USART_SendData(USART6, DATA_TRANSMIT);
 8000486:	2110      	movs	r1, #16
 8000488:	4815      	ldr	r0, [pc, #84]	@ (80004e0 <main+0x84>)
 800048a:	f000 fca5 	bl	8000dd8 <USART_SendData>
            DelayMs(300);
 800048e:	f44f 7096 	mov.w	r0, #300	@ 0x12c
 8000492:	f7ff ffc3 	bl	800041c <DelayMs>
        }
        //Receive
        if( data_receive ==  DATA_RECEIVE)
 8000496:	4b13      	ldr	r3, [pc, #76]	@ (80004e4 <main+0x88>)
 8000498:	781b      	ldrb	r3, [r3, #0]
 800049a:	b2db      	uxtb	r3, r3
 800049c:	2b11      	cmp	r3, #17
 800049e:	d1e1      	bne.n	8000464 <main+0x8>
        {
        	//Dao trang thai led
            	ledState = !ledState;
 80004a0:	4b11      	ldr	r3, [pc, #68]	@ (80004e8 <main+0x8c>)
 80004a2:	781b      	ldrb	r3, [r3, #0]
 80004a4:	2b00      	cmp	r3, #0
 80004a6:	bf14      	ite	ne
 80004a8:	2301      	movne	r3, #1
 80004aa:	2300      	moveq	r3, #0
 80004ac:	b2db      	uxtb	r3, r3
 80004ae:	f083 0301 	eor.w	r3, r3, #1
 80004b2:	b2db      	uxtb	r3, r3
 80004b4:	f003 0301 	and.w	r3, r3, #1
 80004b8:	b2da      	uxtb	r2, r3
 80004ba:	4b0b      	ldr	r3, [pc, #44]	@ (80004e8 <main+0x8c>)
 80004bc:	701a      	strb	r2, [r3, #0]

            	Led_Control(LED_GPIO_PORT, LED_GPIO_PIN, ledState);
 80004be:	4b0a      	ldr	r3, [pc, #40]	@ (80004e8 <main+0x8c>)
 80004c0:	781b      	ldrb	r3, [r3, #0]
 80004c2:	461a      	mov	r2, r3
 80004c4:	2102      	movs	r1, #2
 80004c6:	4809      	ldr	r0, [pc, #36]	@ (80004ec <main+0x90>)
 80004c8:	f7ff fea0 	bl	800020c <Led_Control>

        	data_receive = 0;
 80004cc:	4b05      	ldr	r3, [pc, #20]	@ (80004e4 <main+0x88>)
 80004ce:	2200      	movs	r2, #0
 80004d0:	701a      	strb	r2, [r3, #0]
        currentButtonState = Button_GetLogic(BUTTON_GPIO_PORT, BUTTON_GPIO_PIN);
 80004d2:	e7c7      	b.n	8000464 <main+0x8>
 80004d4:	40020800 	.word	0x40020800
 80004d8:	20000044 	.word	0x20000044
 80004dc:	20000000 	.word	0x20000000
 80004e0:	40011400 	.word	0x40011400
 80004e4:	20000045 	.word	0x20000045
 80004e8:	20000046 	.word	0x20000046
 80004ec:	40020000 	.word	0x40020000

080004f0 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80004f0:	480d      	ldr	r0, [pc, #52]	@ (8000528 <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80004f2:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80004f4:	f000 f826 	bl	8000544 <SystemInit>

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80004f8:	480c      	ldr	r0, [pc, #48]	@ (800052c <LoopForever+0x6>)
  ldr r1, =_edata
 80004fa:	490d      	ldr	r1, [pc, #52]	@ (8000530 <LoopForever+0xa>)
  ldr r2, =_sidata
 80004fc:	4a0d      	ldr	r2, [pc, #52]	@ (8000534 <LoopForever+0xe>)
  movs r3, #0
 80004fe:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000500:	e002      	b.n	8000508 <LoopCopyDataInit>

08000502 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000502:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000504:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 8000506:	3304      	adds	r3, #4

08000508 <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 8000508:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800050a:	428c      	cmp	r4, r1
  bcc CopyDataInit
 800050c:	d3f9      	bcc.n	8000502 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 800050e:	4a0a      	ldr	r2, [pc, #40]	@ (8000538 <LoopForever+0x12>)
  ldr r4, =_ebss
 8000510:	4c0a      	ldr	r4, [pc, #40]	@ (800053c <LoopForever+0x16>)
  movs r3, #0
 8000512:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000514:	e001      	b.n	800051a <LoopFillZerobss>

08000516 <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 8000516:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 8000518:	3204      	adds	r2, #4

0800051a <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800051a:	42a2      	cmp	r2, r4
  bcc FillZerobss
 800051c:	d3fb      	bcc.n	8000516 <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 800051e:	f000 fd3d 	bl	8000f9c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000522:	f7ff ff9b 	bl	800045c <main>

08000526 <LoopForever>:

LoopForever:
  b LoopForever
 8000526:	e7fe      	b.n	8000526 <LoopForever>
  ldr   r0, =_estack
 8000528:	20018000 	.word	0x20018000
  ldr r0, =_sdata
 800052c:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000530:	20000028 	.word	0x20000028
  ldr r2, =_sidata
 8000534:	08001004 	.word	0x08001004
  ldr r2, =_sbss
 8000538:	20000028 	.word	0x20000028
  ldr r4, =_ebss
 800053c:	20000048 	.word	0x20000048

08000540 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000540:	e7fe      	b.n	8000540 <ADC_IRQHandler>
	...

08000544 <SystemInit>:
 8000544:	b580      	push	{r7, lr}
 8000546:	af00      	add	r7, sp, #0
 8000548:	4b16      	ldr	r3, [pc, #88]	@ (80005a4 <SystemInit+0x60>)
 800054a:	f8d3 3088 	ldr.w	r3, [r3, #136]	@ 0x88
 800054e:	4a15      	ldr	r2, [pc, #84]	@ (80005a4 <SystemInit+0x60>)
 8000550:	f443 0370 	orr.w	r3, r3, #15728640	@ 0xf00000
 8000554:	f8c2 3088 	str.w	r3, [r2, #136]	@ 0x88
 8000558:	4b13      	ldr	r3, [pc, #76]	@ (80005a8 <SystemInit+0x64>)
 800055a:	681b      	ldr	r3, [r3, #0]
 800055c:	4a12      	ldr	r2, [pc, #72]	@ (80005a8 <SystemInit+0x64>)
 800055e:	f043 0301 	orr.w	r3, r3, #1
 8000562:	6013      	str	r3, [r2, #0]
 8000564:	4b10      	ldr	r3, [pc, #64]	@ (80005a8 <SystemInit+0x64>)
 8000566:	2200      	movs	r2, #0
 8000568:	609a      	str	r2, [r3, #8]
 800056a:	4b0f      	ldr	r3, [pc, #60]	@ (80005a8 <SystemInit+0x64>)
 800056c:	681b      	ldr	r3, [r3, #0]
 800056e:	4a0e      	ldr	r2, [pc, #56]	@ (80005a8 <SystemInit+0x64>)
 8000570:	f023 7384 	bic.w	r3, r3, #17301504	@ 0x1080000
 8000574:	f423 3380 	bic.w	r3, r3, #65536	@ 0x10000
 8000578:	6013      	str	r3, [r2, #0]
 800057a:	4b0b      	ldr	r3, [pc, #44]	@ (80005a8 <SystemInit+0x64>)
 800057c:	4a0b      	ldr	r2, [pc, #44]	@ (80005ac <SystemInit+0x68>)
 800057e:	605a      	str	r2, [r3, #4]
 8000580:	4b09      	ldr	r3, [pc, #36]	@ (80005a8 <SystemInit+0x64>)
 8000582:	681b      	ldr	r3, [r3, #0]
 8000584:	4a08      	ldr	r2, [pc, #32]	@ (80005a8 <SystemInit+0x64>)
 8000586:	f423 2380 	bic.w	r3, r3, #262144	@ 0x40000
 800058a:	6013      	str	r3, [r2, #0]
 800058c:	4b06      	ldr	r3, [pc, #24]	@ (80005a8 <SystemInit+0x64>)
 800058e:	2200      	movs	r2, #0
 8000590:	60da      	str	r2, [r3, #12]
 8000592:	f000 f889 	bl	80006a8 <SetSysClock>
 8000596:	4b03      	ldr	r3, [pc, #12]	@ (80005a4 <SystemInit+0x60>)
 8000598:	f04f 6200 	mov.w	r2, #134217728	@ 0x8000000
 800059c:	609a      	str	r2, [r3, #8]
 800059e:	bf00      	nop
 80005a0:	bd80      	pop	{r7, pc}
 80005a2:	bf00      	nop
 80005a4:	e000ed00 	.word	0xe000ed00
 80005a8:	40023800 	.word	0x40023800
 80005ac:	24003010 	.word	0x24003010

080005b0 <SystemCoreClockUpdate>:
 80005b0:	b480      	push	{r7}
 80005b2:	b087      	sub	sp, #28
 80005b4:	af00      	add	r7, sp, #0
 80005b6:	2300      	movs	r3, #0
 80005b8:	613b      	str	r3, [r7, #16]
 80005ba:	2300      	movs	r3, #0
 80005bc:	617b      	str	r3, [r7, #20]
 80005be:	2302      	movs	r3, #2
 80005c0:	60fb      	str	r3, [r7, #12]
 80005c2:	2300      	movs	r3, #0
 80005c4:	60bb      	str	r3, [r7, #8]
 80005c6:	2302      	movs	r3, #2
 80005c8:	607b      	str	r3, [r7, #4]
 80005ca:	4b32      	ldr	r3, [pc, #200]	@ (8000694 <SystemCoreClockUpdate+0xe4>)
 80005cc:	689b      	ldr	r3, [r3, #8]
 80005ce:	f003 030c 	and.w	r3, r3, #12
 80005d2:	613b      	str	r3, [r7, #16]
 80005d4:	693b      	ldr	r3, [r7, #16]
 80005d6:	2b04      	cmp	r3, #4
 80005d8:	d007      	beq.n	80005ea <SystemCoreClockUpdate+0x3a>
 80005da:	2b08      	cmp	r3, #8
 80005dc:	d009      	beq.n	80005f2 <SystemCoreClockUpdate+0x42>
 80005de:	2b00      	cmp	r3, #0
 80005e0:	d13d      	bne.n	800065e <SystemCoreClockUpdate+0xae>
 80005e2:	4b2d      	ldr	r3, [pc, #180]	@ (8000698 <SystemCoreClockUpdate+0xe8>)
 80005e4:	4a2d      	ldr	r2, [pc, #180]	@ (800069c <SystemCoreClockUpdate+0xec>)
 80005e6:	601a      	str	r2, [r3, #0]
 80005e8:	e03d      	b.n	8000666 <SystemCoreClockUpdate+0xb6>
 80005ea:	4b2b      	ldr	r3, [pc, #172]	@ (8000698 <SystemCoreClockUpdate+0xe8>)
 80005ec:	4a2c      	ldr	r2, [pc, #176]	@ (80006a0 <SystemCoreClockUpdate+0xf0>)
 80005ee:	601a      	str	r2, [r3, #0]
 80005f0:	e039      	b.n	8000666 <SystemCoreClockUpdate+0xb6>
 80005f2:	4b28      	ldr	r3, [pc, #160]	@ (8000694 <SystemCoreClockUpdate+0xe4>)
 80005f4:	685b      	ldr	r3, [r3, #4]
 80005f6:	0d9b      	lsrs	r3, r3, #22
 80005f8:	f003 0301 	and.w	r3, r3, #1
 80005fc:	60bb      	str	r3, [r7, #8]
 80005fe:	4b25      	ldr	r3, [pc, #148]	@ (8000694 <SystemCoreClockUpdate+0xe4>)
 8000600:	685b      	ldr	r3, [r3, #4]
 8000602:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8000606:	607b      	str	r3, [r7, #4]
 8000608:	68bb      	ldr	r3, [r7, #8]
 800060a:	2b00      	cmp	r3, #0
 800060c:	d00c      	beq.n	8000628 <SystemCoreClockUpdate+0x78>
 800060e:	4a24      	ldr	r2, [pc, #144]	@ (80006a0 <SystemCoreClockUpdate+0xf0>)
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	fbb2 f3f3 	udiv	r3, r2, r3
 8000616:	4a1f      	ldr	r2, [pc, #124]	@ (8000694 <SystemCoreClockUpdate+0xe4>)
 8000618:	6852      	ldr	r2, [r2, #4]
 800061a:	0992      	lsrs	r2, r2, #6
 800061c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000620:	fb02 f303 	mul.w	r3, r2, r3
 8000624:	617b      	str	r3, [r7, #20]
 8000626:	e00b      	b.n	8000640 <SystemCoreClockUpdate+0x90>
 8000628:	4a1c      	ldr	r2, [pc, #112]	@ (800069c <SystemCoreClockUpdate+0xec>)
 800062a:	687b      	ldr	r3, [r7, #4]
 800062c:	fbb2 f3f3 	udiv	r3, r2, r3
 8000630:	4a18      	ldr	r2, [pc, #96]	@ (8000694 <SystemCoreClockUpdate+0xe4>)
 8000632:	6852      	ldr	r2, [r2, #4]
 8000634:	0992      	lsrs	r2, r2, #6
 8000636:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800063a:	fb02 f303 	mul.w	r3, r2, r3
 800063e:	617b      	str	r3, [r7, #20]
 8000640:	4b14      	ldr	r3, [pc, #80]	@ (8000694 <SystemCoreClockUpdate+0xe4>)
 8000642:	685b      	ldr	r3, [r3, #4]
 8000644:	0c1b      	lsrs	r3, r3, #16
 8000646:	f003 0303 	and.w	r3, r3, #3
 800064a:	3301      	adds	r3, #1
 800064c:	005b      	lsls	r3, r3, #1
 800064e:	60fb      	str	r3, [r7, #12]
 8000650:	697a      	ldr	r2, [r7, #20]
 8000652:	68fb      	ldr	r3, [r7, #12]
 8000654:	fbb2 f3f3 	udiv	r3, r2, r3
 8000658:	4a0f      	ldr	r2, [pc, #60]	@ (8000698 <SystemCoreClockUpdate+0xe8>)
 800065a:	6013      	str	r3, [r2, #0]
 800065c:	e003      	b.n	8000666 <SystemCoreClockUpdate+0xb6>
 800065e:	4b0e      	ldr	r3, [pc, #56]	@ (8000698 <SystemCoreClockUpdate+0xe8>)
 8000660:	4a0e      	ldr	r2, [pc, #56]	@ (800069c <SystemCoreClockUpdate+0xec>)
 8000662:	601a      	str	r2, [r3, #0]
 8000664:	bf00      	nop
 8000666:	4b0b      	ldr	r3, [pc, #44]	@ (8000694 <SystemCoreClockUpdate+0xe4>)
 8000668:	689b      	ldr	r3, [r3, #8]
 800066a:	091b      	lsrs	r3, r3, #4
 800066c:	f003 030f 	and.w	r3, r3, #15
 8000670:	4a0c      	ldr	r2, [pc, #48]	@ (80006a4 <SystemCoreClockUpdate+0xf4>)
 8000672:	5cd3      	ldrb	r3, [r2, r3]
 8000674:	b2db      	uxtb	r3, r3
 8000676:	613b      	str	r3, [r7, #16]
 8000678:	4b07      	ldr	r3, [pc, #28]	@ (8000698 <SystemCoreClockUpdate+0xe8>)
 800067a:	681a      	ldr	r2, [r3, #0]
 800067c:	693b      	ldr	r3, [r7, #16]
 800067e:	fa22 f303 	lsr.w	r3, r2, r3
 8000682:	4a05      	ldr	r2, [pc, #20]	@ (8000698 <SystemCoreClockUpdate+0xe8>)
 8000684:	6013      	str	r3, [r2, #0]
 8000686:	bf00      	nop
 8000688:	371c      	adds	r7, #28
 800068a:	46bd      	mov	sp, r7
 800068c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000690:	4770      	bx	lr
 8000692:	bf00      	nop
 8000694:	40023800 	.word	0x40023800
 8000698:	20000004 	.word	0x20000004
 800069c:	00f42400 	.word	0x00f42400
 80006a0:	017d7840 	.word	0x017d7840
 80006a4:	20000008 	.word	0x20000008

080006a8 <SetSysClock>:
 80006a8:	b480      	push	{r7}
 80006aa:	af00      	add	r7, sp, #0
 80006ac:	4b22      	ldr	r3, [pc, #136]	@ (8000738 <SetSysClock+0x90>)
 80006ae:	6c1b      	ldr	r3, [r3, #64]	@ 0x40
 80006b0:	4a21      	ldr	r2, [pc, #132]	@ (8000738 <SetSysClock+0x90>)
 80006b2:	f043 5380 	orr.w	r3, r3, #268435456	@ 0x10000000
 80006b6:	6413      	str	r3, [r2, #64]	@ 0x40
 80006b8:	4b20      	ldr	r3, [pc, #128]	@ (800073c <SetSysClock+0x94>)
 80006ba:	681b      	ldr	r3, [r3, #0]
 80006bc:	4a1f      	ldr	r2, [pc, #124]	@ (800073c <SetSysClock+0x94>)
 80006be:	f443 4340 	orr.w	r3, r3, #49152	@ 0xc000
 80006c2:	6013      	str	r3, [r2, #0]
 80006c4:	4b1c      	ldr	r3, [pc, #112]	@ (8000738 <SetSysClock+0x90>)
 80006c6:	4a1c      	ldr	r2, [pc, #112]	@ (8000738 <SetSysClock+0x90>)
 80006c8:	689b      	ldr	r3, [r3, #8]
 80006ca:	6093      	str	r3, [r2, #8]
 80006cc:	4b1a      	ldr	r3, [pc, #104]	@ (8000738 <SetSysClock+0x90>)
 80006ce:	4a1a      	ldr	r2, [pc, #104]	@ (8000738 <SetSysClock+0x90>)
 80006d0:	689b      	ldr	r3, [r3, #8]
 80006d2:	6093      	str	r3, [r2, #8]
 80006d4:	4b18      	ldr	r3, [pc, #96]	@ (8000738 <SetSysClock+0x90>)
 80006d6:	689b      	ldr	r3, [r3, #8]
 80006d8:	4a17      	ldr	r2, [pc, #92]	@ (8000738 <SetSysClock+0x90>)
 80006da:	f443 5380 	orr.w	r3, r3, #4096	@ 0x1000
 80006de:	6093      	str	r3, [r2, #8]
 80006e0:	4b15      	ldr	r3, [pc, #84]	@ (8000738 <SetSysClock+0x90>)
 80006e2:	4a17      	ldr	r2, [pc, #92]	@ (8000740 <SetSysClock+0x98>)
 80006e4:	605a      	str	r2, [r3, #4]
 80006e6:	4b14      	ldr	r3, [pc, #80]	@ (8000738 <SetSysClock+0x90>)
 80006e8:	681b      	ldr	r3, [r3, #0]
 80006ea:	4a13      	ldr	r2, [pc, #76]	@ (8000738 <SetSysClock+0x90>)
 80006ec:	f043 7380 	orr.w	r3, r3, #16777216	@ 0x1000000
 80006f0:	6013      	str	r3, [r2, #0]
 80006f2:	bf00      	nop
 80006f4:	4b10      	ldr	r3, [pc, #64]	@ (8000738 <SetSysClock+0x90>)
 80006f6:	681b      	ldr	r3, [r3, #0]
 80006f8:	f003 7300 	and.w	r3, r3, #33554432	@ 0x2000000
 80006fc:	2b00      	cmp	r3, #0
 80006fe:	d0f9      	beq.n	80006f4 <SetSysClock+0x4c>
 8000700:	4b10      	ldr	r3, [pc, #64]	@ (8000744 <SetSysClock+0x9c>)
 8000702:	f240 6202 	movw	r2, #1538	@ 0x602
 8000706:	601a      	str	r2, [r3, #0]
 8000708:	4b0b      	ldr	r3, [pc, #44]	@ (8000738 <SetSysClock+0x90>)
 800070a:	689b      	ldr	r3, [r3, #8]
 800070c:	4a0a      	ldr	r2, [pc, #40]	@ (8000738 <SetSysClock+0x90>)
 800070e:	f023 0303 	bic.w	r3, r3, #3
 8000712:	6093      	str	r3, [r2, #8]
 8000714:	4b08      	ldr	r3, [pc, #32]	@ (8000738 <SetSysClock+0x90>)
 8000716:	689b      	ldr	r3, [r3, #8]
 8000718:	4a07      	ldr	r2, [pc, #28]	@ (8000738 <SetSysClock+0x90>)
 800071a:	f043 0302 	orr.w	r3, r3, #2
 800071e:	6093      	str	r3, [r2, #8]
 8000720:	bf00      	nop
 8000722:	4b05      	ldr	r3, [pc, #20]	@ (8000738 <SetSysClock+0x90>)
 8000724:	689b      	ldr	r3, [r3, #8]
 8000726:	f003 030c 	and.w	r3, r3, #12
 800072a:	2b08      	cmp	r3, #8
 800072c:	d1f9      	bne.n	8000722 <SetSysClock+0x7a>
 800072e:	bf00      	nop
 8000730:	46bd      	mov	sp, r7
 8000732:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000736:	4770      	bx	lr
 8000738:	40023800 	.word	0x40023800
 800073c:	40007000 	.word	0x40007000
 8000740:	08015410 	.word	0x08015410
 8000744:	40023c00 	.word	0x40023c00

08000748 <NVIC_PriorityGroupConfig>:
 8000748:	b480      	push	{r7}
 800074a:	b083      	sub	sp, #12
 800074c:	af00      	add	r7, sp, #0
 800074e:	6078      	str	r0, [r7, #4]
 8000750:	4a06      	ldr	r2, [pc, #24]	@ (800076c <NVIC_PriorityGroupConfig+0x24>)
 8000752:	687b      	ldr	r3, [r7, #4]
 8000754:	f043 63bf 	orr.w	r3, r3, #100139008	@ 0x5f80000
 8000758:	f443 3300 	orr.w	r3, r3, #131072	@ 0x20000
 800075c:	60d3      	str	r3, [r2, #12]
 800075e:	bf00      	nop
 8000760:	370c      	adds	r7, #12
 8000762:	46bd      	mov	sp, r7
 8000764:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000768:	4770      	bx	lr
 800076a:	bf00      	nop
 800076c:	e000ed00 	.word	0xe000ed00

08000770 <NVIC_Init>:
 8000770:	b480      	push	{r7}
 8000772:	b085      	sub	sp, #20
 8000774:	af00      	add	r7, sp, #0
 8000776:	6078      	str	r0, [r7, #4]
 8000778:	2300      	movs	r3, #0
 800077a:	73fb      	strb	r3, [r7, #15]
 800077c:	2300      	movs	r3, #0
 800077e:	73bb      	strb	r3, [r7, #14]
 8000780:	230f      	movs	r3, #15
 8000782:	737b      	strb	r3, [r7, #13]
 8000784:	687b      	ldr	r3, [r7, #4]
 8000786:	78db      	ldrb	r3, [r3, #3]
 8000788:	2b00      	cmp	r3, #0
 800078a:	d039      	beq.n	8000800 <NVIC_Init+0x90>
 800078c:	4b27      	ldr	r3, [pc, #156]	@ (800082c <NVIC_Init+0xbc>)
 800078e:	68db      	ldr	r3, [r3, #12]
 8000790:	43db      	mvns	r3, r3
 8000792:	0a1b      	lsrs	r3, r3, #8
 8000794:	b2db      	uxtb	r3, r3
 8000796:	f003 0307 	and.w	r3, r3, #7
 800079a:	73fb      	strb	r3, [r7, #15]
 800079c:	7bfb      	ldrb	r3, [r7, #15]
 800079e:	f1c3 0304 	rsb	r3, r3, #4
 80007a2:	73bb      	strb	r3, [r7, #14]
 80007a4:	7b7a      	ldrb	r2, [r7, #13]
 80007a6:	7bfb      	ldrb	r3, [r7, #15]
 80007a8:	fa42 f303 	asr.w	r3, r2, r3
 80007ac:	737b      	strb	r3, [r7, #13]
 80007ae:	687b      	ldr	r3, [r7, #4]
 80007b0:	785b      	ldrb	r3, [r3, #1]
 80007b2:	461a      	mov	r2, r3
 80007b4:	7bbb      	ldrb	r3, [r7, #14]
 80007b6:	fa02 f303 	lsl.w	r3, r2, r3
 80007ba:	73fb      	strb	r3, [r7, #15]
 80007bc:	687b      	ldr	r3, [r7, #4]
 80007be:	789a      	ldrb	r2, [r3, #2]
 80007c0:	7b7b      	ldrb	r3, [r7, #13]
 80007c2:	4013      	ands	r3, r2
 80007c4:	b2da      	uxtb	r2, r3
 80007c6:	7bfb      	ldrb	r3, [r7, #15]
 80007c8:	4313      	orrs	r3, r2
 80007ca:	73fb      	strb	r3, [r7, #15]
 80007cc:	7bfb      	ldrb	r3, [r7, #15]
 80007ce:	011b      	lsls	r3, r3, #4
 80007d0:	73fb      	strb	r3, [r7, #15]
 80007d2:	4a17      	ldr	r2, [pc, #92]	@ (8000830 <NVIC_Init+0xc0>)
 80007d4:	687b      	ldr	r3, [r7, #4]
 80007d6:	781b      	ldrb	r3, [r3, #0]
 80007d8:	4413      	add	r3, r2
 80007da:	7bfa      	ldrb	r2, [r7, #15]
 80007dc:	f883 2300 	strb.w	r2, [r3, #768]	@ 0x300
 80007e0:	687b      	ldr	r3, [r7, #4]
 80007e2:	781b      	ldrb	r3, [r3, #0]
 80007e4:	f003 031f 	and.w	r3, r3, #31
 80007e8:	4911      	ldr	r1, [pc, #68]	@ (8000830 <NVIC_Init+0xc0>)
 80007ea:	687a      	ldr	r2, [r7, #4]
 80007ec:	7812      	ldrb	r2, [r2, #0]
 80007ee:	0952      	lsrs	r2, r2, #5
 80007f0:	b2d2      	uxtb	r2, r2
 80007f2:	4610      	mov	r0, r2
 80007f4:	2201      	movs	r2, #1
 80007f6:	fa02 f303 	lsl.w	r3, r2, r3
 80007fa:	f841 3020 	str.w	r3, [r1, r0, lsl #2]
 80007fe:	e00f      	b.n	8000820 <NVIC_Init+0xb0>
 8000800:	687b      	ldr	r3, [r7, #4]
 8000802:	781b      	ldrb	r3, [r3, #0]
 8000804:	f003 031f 	and.w	r3, r3, #31
 8000808:	4909      	ldr	r1, [pc, #36]	@ (8000830 <NVIC_Init+0xc0>)
 800080a:	687a      	ldr	r2, [r7, #4]
 800080c:	7812      	ldrb	r2, [r2, #0]
 800080e:	0952      	lsrs	r2, r2, #5
 8000810:	b2d2      	uxtb	r2, r2
 8000812:	4610      	mov	r0, r2
 8000814:	2201      	movs	r2, #1
 8000816:	409a      	lsls	r2, r3
 8000818:	f100 0320 	add.w	r3, r0, #32
 800081c:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8000820:	bf00      	nop
 8000822:	3714      	adds	r7, #20
 8000824:	46bd      	mov	sp, r7
 8000826:	f85d 7b04 	ldr.w	r7, [sp], #4
 800082a:	4770      	bx	lr
 800082c:	e000ed00 	.word	0xe000ed00
 8000830:	e000e100 	.word	0xe000e100

08000834 <GPIO_Init>:
 8000834:	b480      	push	{r7}
 8000836:	b087      	sub	sp, #28
 8000838:	af00      	add	r7, sp, #0
 800083a:	6078      	str	r0, [r7, #4]
 800083c:	6039      	str	r1, [r7, #0]
 800083e:	2300      	movs	r3, #0
 8000840:	617b      	str	r3, [r7, #20]
 8000842:	2300      	movs	r3, #0
 8000844:	613b      	str	r3, [r7, #16]
 8000846:	2300      	movs	r3, #0
 8000848:	60fb      	str	r3, [r7, #12]
 800084a:	2300      	movs	r3, #0
 800084c:	617b      	str	r3, [r7, #20]
 800084e:	e076      	b.n	800093e <GPIO_Init+0x10a>
 8000850:	2201      	movs	r2, #1
 8000852:	697b      	ldr	r3, [r7, #20]
 8000854:	fa02 f303 	lsl.w	r3, r2, r3
 8000858:	613b      	str	r3, [r7, #16]
 800085a:	683b      	ldr	r3, [r7, #0]
 800085c:	681b      	ldr	r3, [r3, #0]
 800085e:	693a      	ldr	r2, [r7, #16]
 8000860:	4013      	ands	r3, r2
 8000862:	60fb      	str	r3, [r7, #12]
 8000864:	68fa      	ldr	r2, [r7, #12]
 8000866:	693b      	ldr	r3, [r7, #16]
 8000868:	429a      	cmp	r2, r3
 800086a:	d165      	bne.n	8000938 <GPIO_Init+0x104>
 800086c:	687b      	ldr	r3, [r7, #4]
 800086e:	681a      	ldr	r2, [r3, #0]
 8000870:	697b      	ldr	r3, [r7, #20]
 8000872:	005b      	lsls	r3, r3, #1
 8000874:	2103      	movs	r1, #3
 8000876:	fa01 f303 	lsl.w	r3, r1, r3
 800087a:	43db      	mvns	r3, r3
 800087c:	401a      	ands	r2, r3
 800087e:	687b      	ldr	r3, [r7, #4]
 8000880:	601a      	str	r2, [r3, #0]
 8000882:	687b      	ldr	r3, [r7, #4]
 8000884:	681a      	ldr	r2, [r3, #0]
 8000886:	683b      	ldr	r3, [r7, #0]
 8000888:	791b      	ldrb	r3, [r3, #4]
 800088a:	4619      	mov	r1, r3
 800088c:	697b      	ldr	r3, [r7, #20]
 800088e:	005b      	lsls	r3, r3, #1
 8000890:	fa01 f303 	lsl.w	r3, r1, r3
 8000894:	431a      	orrs	r2, r3
 8000896:	687b      	ldr	r3, [r7, #4]
 8000898:	601a      	str	r2, [r3, #0]
 800089a:	683b      	ldr	r3, [r7, #0]
 800089c:	791b      	ldrb	r3, [r3, #4]
 800089e:	2b01      	cmp	r3, #1
 80008a0:	d003      	beq.n	80008aa <GPIO_Init+0x76>
 80008a2:	683b      	ldr	r3, [r7, #0]
 80008a4:	791b      	ldrb	r3, [r3, #4]
 80008a6:	2b02      	cmp	r3, #2
 80008a8:	d12e      	bne.n	8000908 <GPIO_Init+0xd4>
 80008aa:	687b      	ldr	r3, [r7, #4]
 80008ac:	689a      	ldr	r2, [r3, #8]
 80008ae:	697b      	ldr	r3, [r7, #20]
 80008b0:	005b      	lsls	r3, r3, #1
 80008b2:	2103      	movs	r1, #3
 80008b4:	fa01 f303 	lsl.w	r3, r1, r3
 80008b8:	43db      	mvns	r3, r3
 80008ba:	401a      	ands	r2, r3
 80008bc:	687b      	ldr	r3, [r7, #4]
 80008be:	609a      	str	r2, [r3, #8]
 80008c0:	687b      	ldr	r3, [r7, #4]
 80008c2:	689a      	ldr	r2, [r3, #8]
 80008c4:	683b      	ldr	r3, [r7, #0]
 80008c6:	795b      	ldrb	r3, [r3, #5]
 80008c8:	4619      	mov	r1, r3
 80008ca:	697b      	ldr	r3, [r7, #20]
 80008cc:	005b      	lsls	r3, r3, #1
 80008ce:	fa01 f303 	lsl.w	r3, r1, r3
 80008d2:	431a      	orrs	r2, r3
 80008d4:	687b      	ldr	r3, [r7, #4]
 80008d6:	609a      	str	r2, [r3, #8]
 80008d8:	687b      	ldr	r3, [r7, #4]
 80008da:	685a      	ldr	r2, [r3, #4]
 80008dc:	697b      	ldr	r3, [r7, #20]
 80008de:	b29b      	uxth	r3, r3
 80008e0:	4619      	mov	r1, r3
 80008e2:	2301      	movs	r3, #1
 80008e4:	408b      	lsls	r3, r1
 80008e6:	43db      	mvns	r3, r3
 80008e8:	401a      	ands	r2, r3
 80008ea:	687b      	ldr	r3, [r7, #4]
 80008ec:	605a      	str	r2, [r3, #4]
 80008ee:	687b      	ldr	r3, [r7, #4]
 80008f0:	685b      	ldr	r3, [r3, #4]
 80008f2:	683a      	ldr	r2, [r7, #0]
 80008f4:	7992      	ldrb	r2, [r2, #6]
 80008f6:	4611      	mov	r1, r2
 80008f8:	697a      	ldr	r2, [r7, #20]
 80008fa:	b292      	uxth	r2, r2
 80008fc:	fa01 f202 	lsl.w	r2, r1, r2
 8000900:	b292      	uxth	r2, r2
 8000902:	431a      	orrs	r2, r3
 8000904:	687b      	ldr	r3, [r7, #4]
 8000906:	605a      	str	r2, [r3, #4]
 8000908:	687b      	ldr	r3, [r7, #4]
 800090a:	68da      	ldr	r2, [r3, #12]
 800090c:	697b      	ldr	r3, [r7, #20]
 800090e:	b29b      	uxth	r3, r3
 8000910:	005b      	lsls	r3, r3, #1
 8000912:	2103      	movs	r1, #3
 8000914:	fa01 f303 	lsl.w	r3, r1, r3
 8000918:	43db      	mvns	r3, r3
 800091a:	401a      	ands	r2, r3
 800091c:	687b      	ldr	r3, [r7, #4]
 800091e:	60da      	str	r2, [r3, #12]
 8000920:	687b      	ldr	r3, [r7, #4]
 8000922:	68da      	ldr	r2, [r3, #12]
 8000924:	683b      	ldr	r3, [r7, #0]
 8000926:	79db      	ldrb	r3, [r3, #7]
 8000928:	4619      	mov	r1, r3
 800092a:	697b      	ldr	r3, [r7, #20]
 800092c:	005b      	lsls	r3, r3, #1
 800092e:	fa01 f303 	lsl.w	r3, r1, r3
 8000932:	431a      	orrs	r2, r3
 8000934:	687b      	ldr	r3, [r7, #4]
 8000936:	60da      	str	r2, [r3, #12]
 8000938:	697b      	ldr	r3, [r7, #20]
 800093a:	3301      	adds	r3, #1
 800093c:	617b      	str	r3, [r7, #20]
 800093e:	697b      	ldr	r3, [r7, #20]
 8000940:	2b0f      	cmp	r3, #15
 8000942:	d985      	bls.n	8000850 <GPIO_Init+0x1c>
 8000944:	bf00      	nop
 8000946:	371c      	adds	r7, #28
 8000948:	46bd      	mov	sp, r7
 800094a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800094e:	4770      	bx	lr

08000950 <GPIO_ReadInputDataBit>:
 8000950:	b480      	push	{r7}
 8000952:	b085      	sub	sp, #20
 8000954:	af00      	add	r7, sp, #0
 8000956:	6078      	str	r0, [r7, #4]
 8000958:	460b      	mov	r3, r1
 800095a:	807b      	strh	r3, [r7, #2]
 800095c:	2300      	movs	r3, #0
 800095e:	73fb      	strb	r3, [r7, #15]
 8000960:	687b      	ldr	r3, [r7, #4]
 8000962:	691a      	ldr	r2, [r3, #16]
 8000964:	887b      	ldrh	r3, [r7, #2]
 8000966:	4013      	ands	r3, r2
 8000968:	2b00      	cmp	r3, #0
 800096a:	d002      	beq.n	8000972 <GPIO_ReadInputDataBit+0x22>
 800096c:	2301      	movs	r3, #1
 800096e:	73fb      	strb	r3, [r7, #15]
 8000970:	e001      	b.n	8000976 <GPIO_ReadInputDataBit+0x26>
 8000972:	2300      	movs	r3, #0
 8000974:	73fb      	strb	r3, [r7, #15]
 8000976:	7bfb      	ldrb	r3, [r7, #15]
 8000978:	4618      	mov	r0, r3
 800097a:	3714      	adds	r7, #20
 800097c:	46bd      	mov	sp, r7
 800097e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000982:	4770      	bx	lr

08000984 <GPIO_SetBits>:
 8000984:	b480      	push	{r7}
 8000986:	b083      	sub	sp, #12
 8000988:	af00      	add	r7, sp, #0
 800098a:	6078      	str	r0, [r7, #4]
 800098c:	460b      	mov	r3, r1
 800098e:	807b      	strh	r3, [r7, #2]
 8000990:	687b      	ldr	r3, [r7, #4]
 8000992:	887a      	ldrh	r2, [r7, #2]
 8000994:	831a      	strh	r2, [r3, #24]
 8000996:	bf00      	nop
 8000998:	370c      	adds	r7, #12
 800099a:	46bd      	mov	sp, r7
 800099c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009a0:	4770      	bx	lr

080009a2 <GPIO_ResetBits>:
 80009a2:	b480      	push	{r7}
 80009a4:	b083      	sub	sp, #12
 80009a6:	af00      	add	r7, sp, #0
 80009a8:	6078      	str	r0, [r7, #4]
 80009aa:	460b      	mov	r3, r1
 80009ac:	807b      	strh	r3, [r7, #2]
 80009ae:	687b      	ldr	r3, [r7, #4]
 80009b0:	887a      	ldrh	r2, [r7, #2]
 80009b2:	835a      	strh	r2, [r3, #26]
 80009b4:	bf00      	nop
 80009b6:	370c      	adds	r7, #12
 80009b8:	46bd      	mov	sp, r7
 80009ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009be:	4770      	bx	lr

080009c0 <GPIO_PinAFConfig>:
 80009c0:	b480      	push	{r7}
 80009c2:	b085      	sub	sp, #20
 80009c4:	af00      	add	r7, sp, #0
 80009c6:	6078      	str	r0, [r7, #4]
 80009c8:	460b      	mov	r3, r1
 80009ca:	807b      	strh	r3, [r7, #2]
 80009cc:	4613      	mov	r3, r2
 80009ce:	707b      	strb	r3, [r7, #1]
 80009d0:	2300      	movs	r3, #0
 80009d2:	60fb      	str	r3, [r7, #12]
 80009d4:	2300      	movs	r3, #0
 80009d6:	60bb      	str	r3, [r7, #8]
 80009d8:	787a      	ldrb	r2, [r7, #1]
 80009da:	887b      	ldrh	r3, [r7, #2]
 80009dc:	f003 0307 	and.w	r3, r3, #7
 80009e0:	009b      	lsls	r3, r3, #2
 80009e2:	fa02 f303 	lsl.w	r3, r2, r3
 80009e6:	60fb      	str	r3, [r7, #12]
 80009e8:	887b      	ldrh	r3, [r7, #2]
 80009ea:	08db      	lsrs	r3, r3, #3
 80009ec:	b29b      	uxth	r3, r3
 80009ee:	461a      	mov	r2, r3
 80009f0:	687b      	ldr	r3, [r7, #4]
 80009f2:	3208      	adds	r2, #8
 80009f4:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80009f8:	887b      	ldrh	r3, [r7, #2]
 80009fa:	f003 0307 	and.w	r3, r3, #7
 80009fe:	009b      	lsls	r3, r3, #2
 8000a00:	210f      	movs	r1, #15
 8000a02:	fa01 f303 	lsl.w	r3, r1, r3
 8000a06:	43db      	mvns	r3, r3
 8000a08:	8879      	ldrh	r1, [r7, #2]
 8000a0a:	08c9      	lsrs	r1, r1, #3
 8000a0c:	b289      	uxth	r1, r1
 8000a0e:	4608      	mov	r0, r1
 8000a10:	ea02 0103 	and.w	r1, r2, r3
 8000a14:	687b      	ldr	r3, [r7, #4]
 8000a16:	f100 0208 	add.w	r2, r0, #8
 8000a1a:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000a1e:	887b      	ldrh	r3, [r7, #2]
 8000a20:	08db      	lsrs	r3, r3, #3
 8000a22:	b29b      	uxth	r3, r3
 8000a24:	461a      	mov	r2, r3
 8000a26:	687b      	ldr	r3, [r7, #4]
 8000a28:	3208      	adds	r2, #8
 8000a2a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8000a2e:	68fa      	ldr	r2, [r7, #12]
 8000a30:	4313      	orrs	r3, r2
 8000a32:	60bb      	str	r3, [r7, #8]
 8000a34:	887b      	ldrh	r3, [r7, #2]
 8000a36:	08db      	lsrs	r3, r3, #3
 8000a38:	b29b      	uxth	r3, r3
 8000a3a:	461a      	mov	r2, r3
 8000a3c:	687b      	ldr	r3, [r7, #4]
 8000a3e:	3208      	adds	r2, #8
 8000a40:	68b9      	ldr	r1, [r7, #8]
 8000a42:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 8000a46:	bf00      	nop
 8000a48:	3714      	adds	r7, #20
 8000a4a:	46bd      	mov	sp, r7
 8000a4c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a50:	4770      	bx	lr
	...

08000a54 <RCC_GetClocksFreq>:
 8000a54:	b480      	push	{r7}
 8000a56:	b089      	sub	sp, #36	@ 0x24
 8000a58:	af00      	add	r7, sp, #0
 8000a5a:	6078      	str	r0, [r7, #4]
 8000a5c:	2300      	movs	r3, #0
 8000a5e:	61bb      	str	r3, [r7, #24]
 8000a60:	2300      	movs	r3, #0
 8000a62:	617b      	str	r3, [r7, #20]
 8000a64:	2300      	movs	r3, #0
 8000a66:	61fb      	str	r3, [r7, #28]
 8000a68:	2302      	movs	r3, #2
 8000a6a:	613b      	str	r3, [r7, #16]
 8000a6c:	2300      	movs	r3, #0
 8000a6e:	60fb      	str	r3, [r7, #12]
 8000a70:	2302      	movs	r3, #2
 8000a72:	60bb      	str	r3, [r7, #8]
 8000a74:	4b47      	ldr	r3, [pc, #284]	@ (8000b94 <RCC_GetClocksFreq+0x140>)
 8000a76:	689b      	ldr	r3, [r3, #8]
 8000a78:	f003 030c 	and.w	r3, r3, #12
 8000a7c:	61bb      	str	r3, [r7, #24]
 8000a7e:	69bb      	ldr	r3, [r7, #24]
 8000a80:	2b04      	cmp	r3, #4
 8000a82:	d007      	beq.n	8000a94 <RCC_GetClocksFreq+0x40>
 8000a84:	2b08      	cmp	r3, #8
 8000a86:	d009      	beq.n	8000a9c <RCC_GetClocksFreq+0x48>
 8000a88:	2b00      	cmp	r3, #0
 8000a8a:	d13d      	bne.n	8000b08 <RCC_GetClocksFreq+0xb4>
 8000a8c:	687b      	ldr	r3, [r7, #4]
 8000a8e:	4a42      	ldr	r2, [pc, #264]	@ (8000b98 <RCC_GetClocksFreq+0x144>)
 8000a90:	601a      	str	r2, [r3, #0]
 8000a92:	e03d      	b.n	8000b10 <RCC_GetClocksFreq+0xbc>
 8000a94:	687b      	ldr	r3, [r7, #4]
 8000a96:	4a41      	ldr	r2, [pc, #260]	@ (8000b9c <RCC_GetClocksFreq+0x148>)
 8000a98:	601a      	str	r2, [r3, #0]
 8000a9a:	e039      	b.n	8000b10 <RCC_GetClocksFreq+0xbc>
 8000a9c:	4b3d      	ldr	r3, [pc, #244]	@ (8000b94 <RCC_GetClocksFreq+0x140>)
 8000a9e:	685b      	ldr	r3, [r3, #4]
 8000aa0:	0d9b      	lsrs	r3, r3, #22
 8000aa2:	f003 0301 	and.w	r3, r3, #1
 8000aa6:	60fb      	str	r3, [r7, #12]
 8000aa8:	4b3a      	ldr	r3, [pc, #232]	@ (8000b94 <RCC_GetClocksFreq+0x140>)
 8000aaa:	685b      	ldr	r3, [r3, #4]
 8000aac:	f003 033f 	and.w	r3, r3, #63	@ 0x3f
 8000ab0:	60bb      	str	r3, [r7, #8]
 8000ab2:	68fb      	ldr	r3, [r7, #12]
 8000ab4:	2b00      	cmp	r3, #0
 8000ab6:	d00c      	beq.n	8000ad2 <RCC_GetClocksFreq+0x7e>
 8000ab8:	4a38      	ldr	r2, [pc, #224]	@ (8000b9c <RCC_GetClocksFreq+0x148>)
 8000aba:	68bb      	ldr	r3, [r7, #8]
 8000abc:	fbb2 f3f3 	udiv	r3, r2, r3
 8000ac0:	4a34      	ldr	r2, [pc, #208]	@ (8000b94 <RCC_GetClocksFreq+0x140>)
 8000ac2:	6852      	ldr	r2, [r2, #4]
 8000ac4:	0992      	lsrs	r2, r2, #6
 8000ac6:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000aca:	fb02 f303 	mul.w	r3, r2, r3
 8000ace:	61fb      	str	r3, [r7, #28]
 8000ad0:	e00b      	b.n	8000aea <RCC_GetClocksFreq+0x96>
 8000ad2:	4a31      	ldr	r2, [pc, #196]	@ (8000b98 <RCC_GetClocksFreq+0x144>)
 8000ad4:	68bb      	ldr	r3, [r7, #8]
 8000ad6:	fbb2 f3f3 	udiv	r3, r2, r3
 8000ada:	4a2e      	ldr	r2, [pc, #184]	@ (8000b94 <RCC_GetClocksFreq+0x140>)
 8000adc:	6852      	ldr	r2, [r2, #4]
 8000ade:	0992      	lsrs	r2, r2, #6
 8000ae0:	f3c2 0208 	ubfx	r2, r2, #0, #9
 8000ae4:	fb02 f303 	mul.w	r3, r2, r3
 8000ae8:	61fb      	str	r3, [r7, #28]
 8000aea:	4b2a      	ldr	r3, [pc, #168]	@ (8000b94 <RCC_GetClocksFreq+0x140>)
 8000aec:	685b      	ldr	r3, [r3, #4]
 8000aee:	0c1b      	lsrs	r3, r3, #16
 8000af0:	f003 0303 	and.w	r3, r3, #3
 8000af4:	3301      	adds	r3, #1
 8000af6:	005b      	lsls	r3, r3, #1
 8000af8:	613b      	str	r3, [r7, #16]
 8000afa:	69fa      	ldr	r2, [r7, #28]
 8000afc:	693b      	ldr	r3, [r7, #16]
 8000afe:	fbb2 f2f3 	udiv	r2, r2, r3
 8000b02:	687b      	ldr	r3, [r7, #4]
 8000b04:	601a      	str	r2, [r3, #0]
 8000b06:	e003      	b.n	8000b10 <RCC_GetClocksFreq+0xbc>
 8000b08:	687b      	ldr	r3, [r7, #4]
 8000b0a:	4a23      	ldr	r2, [pc, #140]	@ (8000b98 <RCC_GetClocksFreq+0x144>)
 8000b0c:	601a      	str	r2, [r3, #0]
 8000b0e:	bf00      	nop
 8000b10:	4b20      	ldr	r3, [pc, #128]	@ (8000b94 <RCC_GetClocksFreq+0x140>)
 8000b12:	689b      	ldr	r3, [r3, #8]
 8000b14:	f003 03f0 	and.w	r3, r3, #240	@ 0xf0
 8000b18:	61bb      	str	r3, [r7, #24]
 8000b1a:	69bb      	ldr	r3, [r7, #24]
 8000b1c:	091b      	lsrs	r3, r3, #4
 8000b1e:	61bb      	str	r3, [r7, #24]
 8000b20:	4a1f      	ldr	r2, [pc, #124]	@ (8000ba0 <RCC_GetClocksFreq+0x14c>)
 8000b22:	69bb      	ldr	r3, [r7, #24]
 8000b24:	4413      	add	r3, r2
 8000b26:	781b      	ldrb	r3, [r3, #0]
 8000b28:	b2db      	uxtb	r3, r3
 8000b2a:	617b      	str	r3, [r7, #20]
 8000b2c:	687b      	ldr	r3, [r7, #4]
 8000b2e:	681a      	ldr	r2, [r3, #0]
 8000b30:	697b      	ldr	r3, [r7, #20]
 8000b32:	40da      	lsrs	r2, r3
 8000b34:	687b      	ldr	r3, [r7, #4]
 8000b36:	605a      	str	r2, [r3, #4]
 8000b38:	4b16      	ldr	r3, [pc, #88]	@ (8000b94 <RCC_GetClocksFreq+0x140>)
 8000b3a:	689b      	ldr	r3, [r3, #8]
 8000b3c:	f403 53e0 	and.w	r3, r3, #7168	@ 0x1c00
 8000b40:	61bb      	str	r3, [r7, #24]
 8000b42:	69bb      	ldr	r3, [r7, #24]
 8000b44:	0a9b      	lsrs	r3, r3, #10
 8000b46:	61bb      	str	r3, [r7, #24]
 8000b48:	4a15      	ldr	r2, [pc, #84]	@ (8000ba0 <RCC_GetClocksFreq+0x14c>)
 8000b4a:	69bb      	ldr	r3, [r7, #24]
 8000b4c:	4413      	add	r3, r2
 8000b4e:	781b      	ldrb	r3, [r3, #0]
 8000b50:	b2db      	uxtb	r3, r3
 8000b52:	617b      	str	r3, [r7, #20]
 8000b54:	687b      	ldr	r3, [r7, #4]
 8000b56:	685a      	ldr	r2, [r3, #4]
 8000b58:	697b      	ldr	r3, [r7, #20]
 8000b5a:	40da      	lsrs	r2, r3
 8000b5c:	687b      	ldr	r3, [r7, #4]
 8000b5e:	609a      	str	r2, [r3, #8]
 8000b60:	4b0c      	ldr	r3, [pc, #48]	@ (8000b94 <RCC_GetClocksFreq+0x140>)
 8000b62:	689b      	ldr	r3, [r3, #8]
 8000b64:	f403 4360 	and.w	r3, r3, #57344	@ 0xe000
 8000b68:	61bb      	str	r3, [r7, #24]
 8000b6a:	69bb      	ldr	r3, [r7, #24]
 8000b6c:	0b5b      	lsrs	r3, r3, #13
 8000b6e:	61bb      	str	r3, [r7, #24]
 8000b70:	4a0b      	ldr	r2, [pc, #44]	@ (8000ba0 <RCC_GetClocksFreq+0x14c>)
 8000b72:	69bb      	ldr	r3, [r7, #24]
 8000b74:	4413      	add	r3, r2
 8000b76:	781b      	ldrb	r3, [r3, #0]
 8000b78:	b2db      	uxtb	r3, r3
 8000b7a:	617b      	str	r3, [r7, #20]
 8000b7c:	687b      	ldr	r3, [r7, #4]
 8000b7e:	685a      	ldr	r2, [r3, #4]
 8000b80:	697b      	ldr	r3, [r7, #20]
 8000b82:	40da      	lsrs	r2, r3
 8000b84:	687b      	ldr	r3, [r7, #4]
 8000b86:	60da      	str	r2, [r3, #12]
 8000b88:	bf00      	nop
 8000b8a:	3724      	adds	r7, #36	@ 0x24
 8000b8c:	46bd      	mov	sp, r7
 8000b8e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000b92:	4770      	bx	lr
 8000b94:	40023800 	.word	0x40023800
 8000b98:	00f42400 	.word	0x00f42400
 8000b9c:	017d7840 	.word	0x017d7840
 8000ba0:	20000018 	.word	0x20000018

08000ba4 <RCC_AHB1PeriphClockCmd>:
 8000ba4:	b480      	push	{r7}
 8000ba6:	b083      	sub	sp, #12
 8000ba8:	af00      	add	r7, sp, #0
 8000baa:	6078      	str	r0, [r7, #4]
 8000bac:	460b      	mov	r3, r1
 8000bae:	70fb      	strb	r3, [r7, #3]
 8000bb0:	78fb      	ldrb	r3, [r7, #3]
 8000bb2:	2b00      	cmp	r3, #0
 8000bb4:	d006      	beq.n	8000bc4 <RCC_AHB1PeriphClockCmd+0x20>
 8000bb6:	4b0a      	ldr	r3, [pc, #40]	@ (8000be0 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000bb8:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000bba:	4909      	ldr	r1, [pc, #36]	@ (8000be0 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000bbc:	687b      	ldr	r3, [r7, #4]
 8000bbe:	4313      	orrs	r3, r2
 8000bc0:	630b      	str	r3, [r1, #48]	@ 0x30
 8000bc2:	e006      	b.n	8000bd2 <RCC_AHB1PeriphClockCmd+0x2e>
 8000bc4:	4b06      	ldr	r3, [pc, #24]	@ (8000be0 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000bc6:	6b1a      	ldr	r2, [r3, #48]	@ 0x30
 8000bc8:	687b      	ldr	r3, [r7, #4]
 8000bca:	43db      	mvns	r3, r3
 8000bcc:	4904      	ldr	r1, [pc, #16]	@ (8000be0 <RCC_AHB1PeriphClockCmd+0x3c>)
 8000bce:	4013      	ands	r3, r2
 8000bd0:	630b      	str	r3, [r1, #48]	@ 0x30
 8000bd2:	bf00      	nop
 8000bd4:	370c      	adds	r7, #12
 8000bd6:	46bd      	mov	sp, r7
 8000bd8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000bdc:	4770      	bx	lr
 8000bde:	bf00      	nop
 8000be0:	40023800 	.word	0x40023800

08000be4 <RCC_APB2PeriphClockCmd>:
 8000be4:	b480      	push	{r7}
 8000be6:	b083      	sub	sp, #12
 8000be8:	af00      	add	r7, sp, #0
 8000bea:	6078      	str	r0, [r7, #4]
 8000bec:	460b      	mov	r3, r1
 8000bee:	70fb      	strb	r3, [r7, #3]
 8000bf0:	78fb      	ldrb	r3, [r7, #3]
 8000bf2:	2b00      	cmp	r3, #0
 8000bf4:	d006      	beq.n	8000c04 <RCC_APB2PeriphClockCmd+0x20>
 8000bf6:	4b0a      	ldr	r3, [pc, #40]	@ (8000c20 <RCC_APB2PeriphClockCmd+0x3c>)
 8000bf8:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000bfa:	4909      	ldr	r1, [pc, #36]	@ (8000c20 <RCC_APB2PeriphClockCmd+0x3c>)
 8000bfc:	687b      	ldr	r3, [r7, #4]
 8000bfe:	4313      	orrs	r3, r2
 8000c00:	644b      	str	r3, [r1, #68]	@ 0x44
 8000c02:	e006      	b.n	8000c12 <RCC_APB2PeriphClockCmd+0x2e>
 8000c04:	4b06      	ldr	r3, [pc, #24]	@ (8000c20 <RCC_APB2PeriphClockCmd+0x3c>)
 8000c06:	6c5a      	ldr	r2, [r3, #68]	@ 0x44
 8000c08:	687b      	ldr	r3, [r7, #4]
 8000c0a:	43db      	mvns	r3, r3
 8000c0c:	4904      	ldr	r1, [pc, #16]	@ (8000c20 <RCC_APB2PeriphClockCmd+0x3c>)
 8000c0e:	4013      	ands	r3, r2
 8000c10:	644b      	str	r3, [r1, #68]	@ 0x44
 8000c12:	bf00      	nop
 8000c14:	370c      	adds	r7, #12
 8000c16:	46bd      	mov	sp, r7
 8000c18:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000c1c:	4770      	bx	lr
 8000c1e:	bf00      	nop
 8000c20:	40023800 	.word	0x40023800

08000c24 <USART_Init>:
 8000c24:	b580      	push	{r7, lr}
 8000c26:	b08a      	sub	sp, #40	@ 0x28
 8000c28:	af00      	add	r7, sp, #0
 8000c2a:	6078      	str	r0, [r7, #4]
 8000c2c:	6039      	str	r1, [r7, #0]
 8000c2e:	2300      	movs	r3, #0
 8000c30:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c32:	2300      	movs	r3, #0
 8000c34:	623b      	str	r3, [r7, #32]
 8000c36:	2300      	movs	r3, #0
 8000c38:	61fb      	str	r3, [r7, #28]
 8000c3a:	2300      	movs	r3, #0
 8000c3c:	61bb      	str	r3, [r7, #24]
 8000c3e:	687b      	ldr	r3, [r7, #4]
 8000c40:	8a1b      	ldrh	r3, [r3, #16]
 8000c42:	b29b      	uxth	r3, r3
 8000c44:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c46:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c48:	f423 5340 	bic.w	r3, r3, #12288	@ 0x3000
 8000c4c:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c4e:	683b      	ldr	r3, [r7, #0]
 8000c50:	88db      	ldrh	r3, [r3, #6]
 8000c52:	461a      	mov	r2, r3
 8000c54:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c56:	4313      	orrs	r3, r2
 8000c58:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c5a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c5c:	b29a      	uxth	r2, r3
 8000c5e:	687b      	ldr	r3, [r7, #4]
 8000c60:	821a      	strh	r2, [r3, #16]
 8000c62:	687b      	ldr	r3, [r7, #4]
 8000c64:	899b      	ldrh	r3, [r3, #12]
 8000c66:	b29b      	uxth	r3, r3
 8000c68:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c6a:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c6c:	f423 53b0 	bic.w	r3, r3, #5632	@ 0x1600
 8000c70:	f023 030c 	bic.w	r3, r3, #12
 8000c74:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c76:	683b      	ldr	r3, [r7, #0]
 8000c78:	889a      	ldrh	r2, [r3, #4]
 8000c7a:	683b      	ldr	r3, [r7, #0]
 8000c7c:	891b      	ldrh	r3, [r3, #8]
 8000c7e:	4313      	orrs	r3, r2
 8000c80:	b29a      	uxth	r2, r3
 8000c82:	683b      	ldr	r3, [r7, #0]
 8000c84:	895b      	ldrh	r3, [r3, #10]
 8000c86:	4313      	orrs	r3, r2
 8000c88:	b29b      	uxth	r3, r3
 8000c8a:	461a      	mov	r2, r3
 8000c8c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c8e:	4313      	orrs	r3, r2
 8000c90:	627b      	str	r3, [r7, #36]	@ 0x24
 8000c92:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000c94:	b29a      	uxth	r2, r3
 8000c96:	687b      	ldr	r3, [r7, #4]
 8000c98:	819a      	strh	r2, [r3, #12]
 8000c9a:	687b      	ldr	r3, [r7, #4]
 8000c9c:	8a9b      	ldrh	r3, [r3, #20]
 8000c9e:	b29b      	uxth	r3, r3
 8000ca0:	627b      	str	r3, [r7, #36]	@ 0x24
 8000ca2:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000ca4:	f423 7340 	bic.w	r3, r3, #768	@ 0x300
 8000ca8:	627b      	str	r3, [r7, #36]	@ 0x24
 8000caa:	683b      	ldr	r3, [r7, #0]
 8000cac:	899b      	ldrh	r3, [r3, #12]
 8000cae:	461a      	mov	r2, r3
 8000cb0:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000cb2:	4313      	orrs	r3, r2
 8000cb4:	627b      	str	r3, [r7, #36]	@ 0x24
 8000cb6:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000cb8:	b29a      	uxth	r2, r3
 8000cba:	687b      	ldr	r3, [r7, #4]
 8000cbc:	829a      	strh	r2, [r3, #20]
 8000cbe:	f107 0308 	add.w	r3, r7, #8
 8000cc2:	4618      	mov	r0, r3
 8000cc4:	f7ff fec6 	bl	8000a54 <RCC_GetClocksFreq>
 8000cc8:	687b      	ldr	r3, [r7, #4]
 8000cca:	4a30      	ldr	r2, [pc, #192]	@ (8000d8c <USART_Init+0x168>)
 8000ccc:	4293      	cmp	r3, r2
 8000cce:	d003      	beq.n	8000cd8 <USART_Init+0xb4>
 8000cd0:	687b      	ldr	r3, [r7, #4]
 8000cd2:	4a2f      	ldr	r2, [pc, #188]	@ (8000d90 <USART_Init+0x16c>)
 8000cd4:	4293      	cmp	r3, r2
 8000cd6:	d102      	bne.n	8000cde <USART_Init+0xba>
 8000cd8:	697b      	ldr	r3, [r7, #20]
 8000cda:	623b      	str	r3, [r7, #32]
 8000cdc:	e001      	b.n	8000ce2 <USART_Init+0xbe>
 8000cde:	693b      	ldr	r3, [r7, #16]
 8000ce0:	623b      	str	r3, [r7, #32]
 8000ce2:	687b      	ldr	r3, [r7, #4]
 8000ce4:	899b      	ldrh	r3, [r3, #12]
 8000ce6:	b29b      	uxth	r3, r3
 8000ce8:	b21b      	sxth	r3, r3
 8000cea:	2b00      	cmp	r3, #0
 8000cec:	da0c      	bge.n	8000d08 <USART_Init+0xe4>
 8000cee:	6a3a      	ldr	r2, [r7, #32]
 8000cf0:	4613      	mov	r3, r2
 8000cf2:	009b      	lsls	r3, r3, #2
 8000cf4:	4413      	add	r3, r2
 8000cf6:	009a      	lsls	r2, r3, #2
 8000cf8:	441a      	add	r2, r3
 8000cfa:	683b      	ldr	r3, [r7, #0]
 8000cfc:	681b      	ldr	r3, [r3, #0]
 8000cfe:	005b      	lsls	r3, r3, #1
 8000d00:	fbb2 f3f3 	udiv	r3, r2, r3
 8000d04:	61fb      	str	r3, [r7, #28]
 8000d06:	e00b      	b.n	8000d20 <USART_Init+0xfc>
 8000d08:	6a3a      	ldr	r2, [r7, #32]
 8000d0a:	4613      	mov	r3, r2
 8000d0c:	009b      	lsls	r3, r3, #2
 8000d0e:	4413      	add	r3, r2
 8000d10:	009a      	lsls	r2, r3, #2
 8000d12:	441a      	add	r2, r3
 8000d14:	683b      	ldr	r3, [r7, #0]
 8000d16:	681b      	ldr	r3, [r3, #0]
 8000d18:	009b      	lsls	r3, r3, #2
 8000d1a:	fbb2 f3f3 	udiv	r3, r2, r3
 8000d1e:	61fb      	str	r3, [r7, #28]
 8000d20:	69fb      	ldr	r3, [r7, #28]
 8000d22:	4a1c      	ldr	r2, [pc, #112]	@ (8000d94 <USART_Init+0x170>)
 8000d24:	fba2 2303 	umull	r2, r3, r2, r3
 8000d28:	095b      	lsrs	r3, r3, #5
 8000d2a:	011b      	lsls	r3, r3, #4
 8000d2c:	627b      	str	r3, [r7, #36]	@ 0x24
 8000d2e:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000d30:	091b      	lsrs	r3, r3, #4
 8000d32:	2264      	movs	r2, #100	@ 0x64
 8000d34:	fb02 f303 	mul.w	r3, r2, r3
 8000d38:	69fa      	ldr	r2, [r7, #28]
 8000d3a:	1ad3      	subs	r3, r2, r3
 8000d3c:	61bb      	str	r3, [r7, #24]
 8000d3e:	687b      	ldr	r3, [r7, #4]
 8000d40:	899b      	ldrh	r3, [r3, #12]
 8000d42:	b29b      	uxth	r3, r3
 8000d44:	b21b      	sxth	r3, r3
 8000d46:	2b00      	cmp	r3, #0
 8000d48:	da0c      	bge.n	8000d64 <USART_Init+0x140>
 8000d4a:	69bb      	ldr	r3, [r7, #24]
 8000d4c:	00db      	lsls	r3, r3, #3
 8000d4e:	3332      	adds	r3, #50	@ 0x32
 8000d50:	4a10      	ldr	r2, [pc, #64]	@ (8000d94 <USART_Init+0x170>)
 8000d52:	fba2 2303 	umull	r2, r3, r2, r3
 8000d56:	095b      	lsrs	r3, r3, #5
 8000d58:	f003 0307 	and.w	r3, r3, #7
 8000d5c:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000d5e:	4313      	orrs	r3, r2
 8000d60:	627b      	str	r3, [r7, #36]	@ 0x24
 8000d62:	e00b      	b.n	8000d7c <USART_Init+0x158>
 8000d64:	69bb      	ldr	r3, [r7, #24]
 8000d66:	011b      	lsls	r3, r3, #4
 8000d68:	3332      	adds	r3, #50	@ 0x32
 8000d6a:	4a0a      	ldr	r2, [pc, #40]	@ (8000d94 <USART_Init+0x170>)
 8000d6c:	fba2 2303 	umull	r2, r3, r2, r3
 8000d70:	095b      	lsrs	r3, r3, #5
 8000d72:	f003 030f 	and.w	r3, r3, #15
 8000d76:	6a7a      	ldr	r2, [r7, #36]	@ 0x24
 8000d78:	4313      	orrs	r3, r2
 8000d7a:	627b      	str	r3, [r7, #36]	@ 0x24
 8000d7c:	6a7b      	ldr	r3, [r7, #36]	@ 0x24
 8000d7e:	b29a      	uxth	r2, r3
 8000d80:	687b      	ldr	r3, [r7, #4]
 8000d82:	811a      	strh	r2, [r3, #8]
 8000d84:	bf00      	nop
 8000d86:	3728      	adds	r7, #40	@ 0x28
 8000d88:	46bd      	mov	sp, r7
 8000d8a:	bd80      	pop	{r7, pc}
 8000d8c:	40011000 	.word	0x40011000
 8000d90:	40011400 	.word	0x40011400
 8000d94:	51eb851f 	.word	0x51eb851f

08000d98 <USART_Cmd>:
 8000d98:	b480      	push	{r7}
 8000d9a:	b083      	sub	sp, #12
 8000d9c:	af00      	add	r7, sp, #0
 8000d9e:	6078      	str	r0, [r7, #4]
 8000da0:	460b      	mov	r3, r1
 8000da2:	70fb      	strb	r3, [r7, #3]
 8000da4:	78fb      	ldrb	r3, [r7, #3]
 8000da6:	2b00      	cmp	r3, #0
 8000da8:	d008      	beq.n	8000dbc <USART_Cmd+0x24>
 8000daa:	687b      	ldr	r3, [r7, #4]
 8000dac:	899b      	ldrh	r3, [r3, #12]
 8000dae:	b29b      	uxth	r3, r3
 8000db0:	f443 5300 	orr.w	r3, r3, #8192	@ 0x2000
 8000db4:	b29a      	uxth	r2, r3
 8000db6:	687b      	ldr	r3, [r7, #4]
 8000db8:	819a      	strh	r2, [r3, #12]
 8000dba:	e007      	b.n	8000dcc <USART_Cmd+0x34>
 8000dbc:	687b      	ldr	r3, [r7, #4]
 8000dbe:	899b      	ldrh	r3, [r3, #12]
 8000dc0:	b29b      	uxth	r3, r3
 8000dc2:	f423 5300 	bic.w	r3, r3, #8192	@ 0x2000
 8000dc6:	b29a      	uxth	r2, r3
 8000dc8:	687b      	ldr	r3, [r7, #4]
 8000dca:	819a      	strh	r2, [r3, #12]
 8000dcc:	bf00      	nop
 8000dce:	370c      	adds	r7, #12
 8000dd0:	46bd      	mov	sp, r7
 8000dd2:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dd6:	4770      	bx	lr

08000dd8 <USART_SendData>:
 8000dd8:	b480      	push	{r7}
 8000dda:	b083      	sub	sp, #12
 8000ddc:	af00      	add	r7, sp, #0
 8000dde:	6078      	str	r0, [r7, #4]
 8000de0:	460b      	mov	r3, r1
 8000de2:	807b      	strh	r3, [r7, #2]
 8000de4:	887b      	ldrh	r3, [r7, #2]
 8000de6:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000dea:	b29a      	uxth	r2, r3
 8000dec:	687b      	ldr	r3, [r7, #4]
 8000dee:	809a      	strh	r2, [r3, #4]
 8000df0:	bf00      	nop
 8000df2:	370c      	adds	r7, #12
 8000df4:	46bd      	mov	sp, r7
 8000df6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000dfa:	4770      	bx	lr

08000dfc <USART_ReceiveData>:
 8000dfc:	b480      	push	{r7}
 8000dfe:	b083      	sub	sp, #12
 8000e00:	af00      	add	r7, sp, #0
 8000e02:	6078      	str	r0, [r7, #4]
 8000e04:	687b      	ldr	r3, [r7, #4]
 8000e06:	889b      	ldrh	r3, [r3, #4]
 8000e08:	b29b      	uxth	r3, r3
 8000e0a:	f3c3 0308 	ubfx	r3, r3, #0, #9
 8000e0e:	b29b      	uxth	r3, r3
 8000e10:	4618      	mov	r0, r3
 8000e12:	370c      	adds	r7, #12
 8000e14:	46bd      	mov	sp, r7
 8000e16:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000e1a:	4770      	bx	lr

08000e1c <USART_ITConfig>:
 8000e1c:	b480      	push	{r7}
 8000e1e:	b087      	sub	sp, #28
 8000e20:	af00      	add	r7, sp, #0
 8000e22:	6078      	str	r0, [r7, #4]
 8000e24:	460b      	mov	r3, r1
 8000e26:	807b      	strh	r3, [r7, #2]
 8000e28:	4613      	mov	r3, r2
 8000e2a:	707b      	strb	r3, [r7, #1]
 8000e2c:	2300      	movs	r3, #0
 8000e2e:	613b      	str	r3, [r7, #16]
 8000e30:	2300      	movs	r3, #0
 8000e32:	60fb      	str	r3, [r7, #12]
 8000e34:	2300      	movs	r3, #0
 8000e36:	60bb      	str	r3, [r7, #8]
 8000e38:	2300      	movs	r3, #0
 8000e3a:	617b      	str	r3, [r7, #20]
 8000e3c:	687b      	ldr	r3, [r7, #4]
 8000e3e:	617b      	str	r3, [r7, #20]
 8000e40:	887b      	ldrh	r3, [r7, #2]
 8000e42:	b2db      	uxtb	r3, r3
 8000e44:	095b      	lsrs	r3, r3, #5
 8000e46:	b2db      	uxtb	r3, r3
 8000e48:	613b      	str	r3, [r7, #16]
 8000e4a:	887b      	ldrh	r3, [r7, #2]
 8000e4c:	f003 031f 	and.w	r3, r3, #31
 8000e50:	60fb      	str	r3, [r7, #12]
 8000e52:	2201      	movs	r2, #1
 8000e54:	68fb      	ldr	r3, [r7, #12]
 8000e56:	fa02 f303 	lsl.w	r3, r2, r3
 8000e5a:	60bb      	str	r3, [r7, #8]
 8000e5c:	693b      	ldr	r3, [r7, #16]
 8000e5e:	2b01      	cmp	r3, #1
 8000e60:	d103      	bne.n	8000e6a <USART_ITConfig+0x4e>
 8000e62:	697b      	ldr	r3, [r7, #20]
 8000e64:	330c      	adds	r3, #12
 8000e66:	617b      	str	r3, [r7, #20]
 8000e68:	e009      	b.n	8000e7e <USART_ITConfig+0x62>
 8000e6a:	693b      	ldr	r3, [r7, #16]
 8000e6c:	2b02      	cmp	r3, #2
 8000e6e:	d103      	bne.n	8000e78 <USART_ITConfig+0x5c>
 8000e70:	697b      	ldr	r3, [r7, #20]
 8000e72:	3310      	adds	r3, #16
 8000e74:	617b      	str	r3, [r7, #20]
 8000e76:	e002      	b.n	8000e7e <USART_ITConfig+0x62>
 8000e78:	697b      	ldr	r3, [r7, #20]
 8000e7a:	3314      	adds	r3, #20
 8000e7c:	617b      	str	r3, [r7, #20]
 8000e7e:	787b      	ldrb	r3, [r7, #1]
 8000e80:	2b00      	cmp	r3, #0
 8000e82:	d006      	beq.n	8000e92 <USART_ITConfig+0x76>
 8000e84:	697b      	ldr	r3, [r7, #20]
 8000e86:	6819      	ldr	r1, [r3, #0]
 8000e88:	697b      	ldr	r3, [r7, #20]
 8000e8a:	68ba      	ldr	r2, [r7, #8]
 8000e8c:	430a      	orrs	r2, r1
 8000e8e:	601a      	str	r2, [r3, #0]
 8000e90:	e006      	b.n	8000ea0 <USART_ITConfig+0x84>
 8000e92:	697b      	ldr	r3, [r7, #20]
 8000e94:	6819      	ldr	r1, [r3, #0]
 8000e96:	68bb      	ldr	r3, [r7, #8]
 8000e98:	43da      	mvns	r2, r3
 8000e9a:	697b      	ldr	r3, [r7, #20]
 8000e9c:	400a      	ands	r2, r1
 8000e9e:	601a      	str	r2, [r3, #0]
 8000ea0:	bf00      	nop
 8000ea2:	371c      	adds	r7, #28
 8000ea4:	46bd      	mov	sp, r7
 8000ea6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000eaa:	4770      	bx	lr

08000eac <USART_GetITStatus>:
 8000eac:	b480      	push	{r7}
 8000eae:	b087      	sub	sp, #28
 8000eb0:	af00      	add	r7, sp, #0
 8000eb2:	6078      	str	r0, [r7, #4]
 8000eb4:	460b      	mov	r3, r1
 8000eb6:	807b      	strh	r3, [r7, #2]
 8000eb8:	2300      	movs	r3, #0
 8000eba:	60fb      	str	r3, [r7, #12]
 8000ebc:	2300      	movs	r3, #0
 8000ebe:	617b      	str	r3, [r7, #20]
 8000ec0:	2300      	movs	r3, #0
 8000ec2:	60bb      	str	r3, [r7, #8]
 8000ec4:	2300      	movs	r3, #0
 8000ec6:	74fb      	strb	r3, [r7, #19]
 8000ec8:	887b      	ldrh	r3, [r7, #2]
 8000eca:	b2db      	uxtb	r3, r3
 8000ecc:	095b      	lsrs	r3, r3, #5
 8000ece:	b2db      	uxtb	r3, r3
 8000ed0:	60bb      	str	r3, [r7, #8]
 8000ed2:	887b      	ldrh	r3, [r7, #2]
 8000ed4:	f003 031f 	and.w	r3, r3, #31
 8000ed8:	617b      	str	r3, [r7, #20]
 8000eda:	2201      	movs	r2, #1
 8000edc:	697b      	ldr	r3, [r7, #20]
 8000ede:	fa02 f303 	lsl.w	r3, r2, r3
 8000ee2:	617b      	str	r3, [r7, #20]
 8000ee4:	68bb      	ldr	r3, [r7, #8]
 8000ee6:	2b01      	cmp	r3, #1
 8000ee8:	d107      	bne.n	8000efa <USART_GetITStatus+0x4e>
 8000eea:	687b      	ldr	r3, [r7, #4]
 8000eec:	899b      	ldrh	r3, [r3, #12]
 8000eee:	b29b      	uxth	r3, r3
 8000ef0:	461a      	mov	r2, r3
 8000ef2:	697b      	ldr	r3, [r7, #20]
 8000ef4:	4013      	ands	r3, r2
 8000ef6:	617b      	str	r3, [r7, #20]
 8000ef8:	e011      	b.n	8000f1e <USART_GetITStatus+0x72>
 8000efa:	68bb      	ldr	r3, [r7, #8]
 8000efc:	2b02      	cmp	r3, #2
 8000efe:	d107      	bne.n	8000f10 <USART_GetITStatus+0x64>
 8000f00:	687b      	ldr	r3, [r7, #4]
 8000f02:	8a1b      	ldrh	r3, [r3, #16]
 8000f04:	b29b      	uxth	r3, r3
 8000f06:	461a      	mov	r2, r3
 8000f08:	697b      	ldr	r3, [r7, #20]
 8000f0a:	4013      	ands	r3, r2
 8000f0c:	617b      	str	r3, [r7, #20]
 8000f0e:	e006      	b.n	8000f1e <USART_GetITStatus+0x72>
 8000f10:	687b      	ldr	r3, [r7, #4]
 8000f12:	8a9b      	ldrh	r3, [r3, #20]
 8000f14:	b29b      	uxth	r3, r3
 8000f16:	461a      	mov	r2, r3
 8000f18:	697b      	ldr	r3, [r7, #20]
 8000f1a:	4013      	ands	r3, r2
 8000f1c:	617b      	str	r3, [r7, #20]
 8000f1e:	887b      	ldrh	r3, [r7, #2]
 8000f20:	0a1b      	lsrs	r3, r3, #8
 8000f22:	b29b      	uxth	r3, r3
 8000f24:	60fb      	str	r3, [r7, #12]
 8000f26:	2201      	movs	r2, #1
 8000f28:	68fb      	ldr	r3, [r7, #12]
 8000f2a:	fa02 f303 	lsl.w	r3, r2, r3
 8000f2e:	60fb      	str	r3, [r7, #12]
 8000f30:	687b      	ldr	r3, [r7, #4]
 8000f32:	881b      	ldrh	r3, [r3, #0]
 8000f34:	b29b      	uxth	r3, r3
 8000f36:	461a      	mov	r2, r3
 8000f38:	68fb      	ldr	r3, [r7, #12]
 8000f3a:	4013      	ands	r3, r2
 8000f3c:	60fb      	str	r3, [r7, #12]
 8000f3e:	697b      	ldr	r3, [r7, #20]
 8000f40:	2b00      	cmp	r3, #0
 8000f42:	d005      	beq.n	8000f50 <USART_GetITStatus+0xa4>
 8000f44:	68fb      	ldr	r3, [r7, #12]
 8000f46:	2b00      	cmp	r3, #0
 8000f48:	d002      	beq.n	8000f50 <USART_GetITStatus+0xa4>
 8000f4a:	2301      	movs	r3, #1
 8000f4c:	74fb      	strb	r3, [r7, #19]
 8000f4e:	e001      	b.n	8000f54 <USART_GetITStatus+0xa8>
 8000f50:	2300      	movs	r3, #0
 8000f52:	74fb      	strb	r3, [r7, #19]
 8000f54:	7cfb      	ldrb	r3, [r7, #19]
 8000f56:	4618      	mov	r0, r3
 8000f58:	371c      	adds	r7, #28
 8000f5a:	46bd      	mov	sp, r7
 8000f5c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f60:	4770      	bx	lr

08000f62 <USART_ClearITPendingBit>:
 8000f62:	b480      	push	{r7}
 8000f64:	b085      	sub	sp, #20
 8000f66:	af00      	add	r7, sp, #0
 8000f68:	6078      	str	r0, [r7, #4]
 8000f6a:	460b      	mov	r3, r1
 8000f6c:	807b      	strh	r3, [r7, #2]
 8000f6e:	2300      	movs	r3, #0
 8000f70:	81fb      	strh	r3, [r7, #14]
 8000f72:	2300      	movs	r3, #0
 8000f74:	81bb      	strh	r3, [r7, #12]
 8000f76:	887b      	ldrh	r3, [r7, #2]
 8000f78:	0a1b      	lsrs	r3, r3, #8
 8000f7a:	81fb      	strh	r3, [r7, #14]
 8000f7c:	89fb      	ldrh	r3, [r7, #14]
 8000f7e:	2201      	movs	r2, #1
 8000f80:	fa02 f303 	lsl.w	r3, r2, r3
 8000f84:	81bb      	strh	r3, [r7, #12]
 8000f86:	89bb      	ldrh	r3, [r7, #12]
 8000f88:	43db      	mvns	r3, r3
 8000f8a:	b29a      	uxth	r2, r3
 8000f8c:	687b      	ldr	r3, [r7, #4]
 8000f8e:	801a      	strh	r2, [r3, #0]
 8000f90:	bf00      	nop
 8000f92:	3714      	adds	r7, #20
 8000f94:	46bd      	mov	sp, r7
 8000f96:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000f9a:	4770      	bx	lr

08000f9c <__libc_init_array>:
 8000f9c:	b570      	push	{r4, r5, r6, lr}
 8000f9e:	4d0d      	ldr	r5, [pc, #52]	@ (8000fd4 <__libc_init_array+0x38>)
 8000fa0:	4c0d      	ldr	r4, [pc, #52]	@ (8000fd8 <__libc_init_array+0x3c>)
 8000fa2:	1b64      	subs	r4, r4, r5
 8000fa4:	10a4      	asrs	r4, r4, #2
 8000fa6:	2600      	movs	r6, #0
 8000fa8:	42a6      	cmp	r6, r4
 8000faa:	d109      	bne.n	8000fc0 <__libc_init_array+0x24>
 8000fac:	4d0b      	ldr	r5, [pc, #44]	@ (8000fdc <__libc_init_array+0x40>)
 8000fae:	4c0c      	ldr	r4, [pc, #48]	@ (8000fe0 <__libc_init_array+0x44>)
 8000fb0:	f000 f818 	bl	8000fe4 <_init>
 8000fb4:	1b64      	subs	r4, r4, r5
 8000fb6:	10a4      	asrs	r4, r4, #2
 8000fb8:	2600      	movs	r6, #0
 8000fba:	42a6      	cmp	r6, r4
 8000fbc:	d105      	bne.n	8000fca <__libc_init_array+0x2e>
 8000fbe:	bd70      	pop	{r4, r5, r6, pc}
 8000fc0:	f855 3b04 	ldr.w	r3, [r5], #4
 8000fc4:	4798      	blx	r3
 8000fc6:	3601      	adds	r6, #1
 8000fc8:	e7ee      	b.n	8000fa8 <__libc_init_array+0xc>
 8000fca:	f855 3b04 	ldr.w	r3, [r5], #4
 8000fce:	4798      	blx	r3
 8000fd0:	3601      	adds	r6, #1
 8000fd2:	e7f2      	b.n	8000fba <__libc_init_array+0x1e>
 8000fd4:	08000ffc 	.word	0x08000ffc
 8000fd8:	08000ffc 	.word	0x08000ffc
 8000fdc:	08000ffc 	.word	0x08000ffc
 8000fe0:	08001000 	.word	0x08001000

08000fe4 <_init>:
 8000fe4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000fe6:	bf00      	nop
 8000fe8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000fea:	bc08      	pop	{r3}
 8000fec:	469e      	mov	lr, r3
 8000fee:	4770      	bx	lr

08000ff0 <_fini>:
 8000ff0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ff2:	bf00      	nop
 8000ff4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ff6:	bc08      	pop	{r3}
 8000ff8:	469e      	mov	lr, r3
 8000ffa:	4770      	bx	lr
